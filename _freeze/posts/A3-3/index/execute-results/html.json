{
  "hash": "6257827d29566ad399b84a2f0e050814",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"cartoons\"\nformat:\n  html:\n    css: styles.css\n---\n\n\n\n\n\n------------------------------------------------------------------------\n\n<button>[Reading the Data]{.button_top}</button>\n\n------------------------------------------------------------------------\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncartoons <-read.csv(\"../../data/cartoonsvs.csv\")\nprint(head(cartoons))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Participant.ID Gender     Cartoon Rating\n1             P1   Male Chota Bheem    8.5\n2             P2   Male Chota Bheem    6.0\n3             P3   Male Chota Bheem    8.0\n4             P4   Male Chota Bheem    7.0\n5             P5   Male Chota Bheem    8.0\n6             P6   Male Chota Bheem   10.0\n```\n\n\n:::\n:::\n\n\n\n\n\n## \\## Research Question: Which is better among Doraemon, Dragon Tales, and Chhota Bheem?\n\n<button>[Data Munging]{.button_top}</button>\n\n------------------------------------------------------------------------\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\n\ncartoons_modified <- cartoons %>%\n  mutate(Gender = as.factor(Gender)) %>%\n  mutate(Cartoon = as.factor(Cartoon))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(cartoons_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Participant.ID\" \"Gender\"         \"Cartoon\"        \"Rating\"        \n```\n\n\n:::\n:::\n\n\n\n\n\n## Plotting Graphs for Eda\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~Rating,\n  fill = ~Cartoon, \n  data = cartoons_modified, \n  alpha = 0.5,  \n  bins = 25  \n) %>%\n  gf_vline(xintercept = ~ mean(Rating, na.rm = TRUE),  \n            linetype = \"dashed\", color = \"red\") %>%\n  gf_labs(\n    title = \"Histogram of Cartoon Ratings\",\n    x = \"Rating\", \n    y = \"Count\"\n  ) %>%\n  gf_text(\n    label = \"Overall Mean\", \n    x = mean(cartoons_modified$Rating, na.rm = TRUE),  \n    y = 2, \n    color = \"red\"\n  ) %>%\n  gf_refine(guides(fill = guide_legend(title = \"Cartoon\"))) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_boxplot(\n  data = cartoons_modified,\n  Rating ~ Cartoon,\n  fill = ~Cartoon,\n  alpha = 0.5\n) %>%\n  gf_vline(xintercept = ~ mean(Rating, na.rm = TRUE)) %>%\n  gf_labs(\n    title = \"Boxplots of Cartoon Ratings\",\n    x = \"Cartoon\", \n    y = \"Rating\",\n   \n  ) %>%\n  gf_refine(\n    scale_x_discrete(guide = \"prism_bracket\"),\n    guides(fill = guide_legend(title = \"Cartoon\"))\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The S3 guide system was deprecated in ggplot2 3.5.0.\nℹ It has been replaced by a ggproto system that can be extended.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### Observations\n\nDoraemon with the highest mean seems to be the most popular, also shows wide variability\n\nDragon tales - less popular than the other two\n\nChota Bheem shows a smaller range of ratings\n\nOutliers for Doraemon and Dragon tales\n\n.\n\n# Anova\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncartoon_anova <- aov(Rating ~ Cartoon, data = cartoons_modified)\n\nsupernova::pairwise(cartoon_anova,\n  correction = \"Bonferroni\", # Try \"Tukey\"\n  alpha = 0.05, # 95% CI calculation\n  var_equal = TRUE, # We'll see\n  plot = TRUE\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Pairwise t-tests with Bonferroni correction ─────────────────────────────────\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nModel: Rating ~ Cartoon\n```\n\n\n:::\n\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCartoon\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLevels: 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFamily-wise error-rate: 0.049\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  group_1      group_2      diff pooled_se     t    df  lower upper  p_adj\n  <chr>        <chr>       <dbl>     <dbl> <dbl> <int>  <dbl> <dbl>  <dbl>\n1 Doraemon     Chota Bheem 0.580     0.354 1.636    87 -0.186 1.346  .3161\n2 Dragon Tales Chota Bheem 0.597     0.354 1.683    87 -0.170 1.363  .2877\n3 Dragon Tales Doraemon    0.017     0.354 0.047    87 -0.750 0.783 1.0000\n```\n\n\n:::\n:::\n\n\n\n\n\n-   Doraemon and Chota bheem have significantly different mean ratings.\n\n-   Dragon Tales and Chota bheem have significantly different mean ratings.\n\n-   There is no significant difference in mean ratings between Dragon Tales and Doraemon.\n\n    ## Doraemon is the highest rated followed by cHOTA bheem and then Dragon tales\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsupernova::equation(cartoon_anova)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nFitted equation:\nRating = 6.67 + 0.58*CartoonDoraemon + 0.5966667*CartoonDragon Tales + e\n```\n\n\n:::\n:::\n\n\n\n\n\n# Checking Assumptions\n\n## Check for normality\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshapiro.test(x = cartoons_modified$Rating)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  cartoons_modified$Rating\nW = 0.93517, p-value = 0.0002269\n```\n\n\n:::\n:::\n\n\n\n\n\nchecking normality for each cartoon\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnormality_results <- cartoons_modified %>%\n  group_by(Cartoon) %>%\n  summarise(shapiro_p_value = shapiro.test(Rating)$p.value)\n\nprint(normality_results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  Cartoon      shapiro_p_value\n  <fct>                  <dbl>\n1 Chota Bheem           0.185 \n2 Doraemon              0.0139\n3 Dragon Tales          0.0240\n```\n\n\n:::\n:::\n\n\n\n\n\n-   based on p values, only the data for chota bheem is normally distributed\n\n### Residual post-model:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncartoon_anova$residuals %>%\n  as_tibble() %>%\n  gf_dhistogram(~value, data = .) %>%\n  gf_fitdistr()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##\ncartoon_anova$residuals %>%\n  as_tibble() %>%\n  gf_qq(~value, data = .) %>%\n  gf_qqstep() %>%\n  gf_qqline()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\n##\nshapiro.test(cartoon_anova$residuals)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  cartoon_anova$residuals\nW = 0.93926, p-value = 0.0003856\n```\n\n\n:::\n:::\n\n\n\n\n\n-   residuals are also not normally distributed\n\n## Check for Variance\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncartoons_modified %>%\n  group_by(Cartoon) %>%\n  summarise(variance = var(Rating))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  Cartoon      variance\n  <fct>           <dbl>\n1 Chota Bheem      2.21\n2 Doraemon         5.25\n3 Dragon Tales     3.84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Perform Levene's Test for homogeneity of variances\nDescTools::LeveneTest(Rating ~ Cartoon, data = cartoons_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(>F)\ngroup  2  1.2923 0.2798\n      87               \n```\n\n\n:::\n\n```{.r .cell-code}\n# Perform Fligner-Killeen Test for homogeneity of variances\nfligner.test(Rating ~ Cartoon, data = cartoons_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tFligner-Killeen test of homogeneity of variances\n\ndata:  Rating by Cartoon\nFligner-Killeen:med chi-squared = 1.8135, df = 2, p-value = 0.4038\n```\n\n\n:::\n:::\n\n\n\n\n\n### both tests indicate that variances are approx equal.\n\n# Anova using permutation\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobserved_infer <-\n  cartoons_modified %>%  \n  specify(Rating ~ Cartoon) %>%\n  hypothesise(null = \"independence\") %>%\n  calculate(stat = \"F\")\n\nobserved_infer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: Rating (numeric)\nExplanatory: Cartoon (factor)\nNull Hypothesis: independence\n# A tibble: 1 × 1\n   stat\n  <dbl>\n1 0.919\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_dist_infer <- cartoons_modified %>%\n  specify(Rating ~ Cartoon) %>%\n  hypothesise(null = \"independence\") %>%\n  generate(reps = 4999, type = \"permute\") %>%\n  calculate(stat = \"F\")\n##\nhead(null_dist_infer, n = 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: Rating (numeric)\nExplanatory: Cartoon (factor)\nNull Hypothesis: independence\n# A tibble: 15 × 2\n   replicate   stat\n       <int>  <dbl>\n 1         1 0.530 \n 2         2 0.0222\n 3         3 0.111 \n 4         4 0.108 \n 5         5 0.190 \n 6         6 0.310 \n 7         7 1.39  \n 8         8 1.27  \n 9         9 0.215 \n10        10 0.852 \n11        11 0.696 \n12        12 0.0170\n13        13 0.566 \n14        14 0.792 \n15        15 2.90  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n##\nnull_dist_infer %>%\n  visualise(method = \"simulation\") +\n  shade_p_value(obs_stat = observed_infer$stat, direction = \"right\") +\n  scale_x_continuous(trans = \"log10\", expand = c(0, 0)) +\n  coord_cartesian(xlim = c(0.2, 500), clip = \"off\") +\n  annotation_logticks(outside = FALSE) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in transformation$transform(x): NaNs produced\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in scale_x_continuous(trans = \"log10\", expand = c(0, 0)): log-10\ntransformation introduced infinite values.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n\nbased on the infer based permutation test, the observed test statistic is not unusual and we fail to reject the null hypothesis- ???\n\n# Based on pairwise comparisons though...Doraemon \\> Chota Bheem \\> Dragon Tales\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}