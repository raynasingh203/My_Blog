[
  {
    "objectID": "counts.html",
    "href": "counts.html",
    "title": "Untitled",
    "section": "",
    "text": "knitr::opts_chunk$set(tidy = \"formatr\", tidy.opts = list(blank = FALSE, width.cutoff = 30))\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\n\n\ntaxi &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/taxi.csv\")\n\nRows: 10000 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): tip, company, local, dow, month\ndbl (3): rownames, distance, hour\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n/"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "loading…",
    "section": "",
    "text": "A-3 pocketmoney\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA3- cartoons\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA-3 streams\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrial\n\n\n\n\n\n\n\n\n\n\n\nRayna\n\n\n\n\n\n\n\n\n\n\n\n\nquantities.qmd in progress…\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA2-Dataset-3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngroups\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA-3 tips\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nanova\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA1: Counts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA-2 Dataset-1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA1: summaries\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nindex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA2-Dataset-2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/class4/index.html",
    "href": "posts/class4/index.html",
    "title": "quantities.qmd",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\n##\nlibrary(crosstable) # Fast stats for multiple variables in table form, \n\n\nAttaching package: 'crosstable'\n\nThe following object is masked from 'package:purrr':\n\n    compact\n\n\n\ndiamonds\n\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# ℹ 53,930 more rows\n\n\n\nglimpse(diamonds)\n\nRows: 53,940\nColumns: 10\n$ carat   &lt;dbl&gt; 0.23, 0.21, 0.23, 0.29, 0.31, 0.24, 0.24, 0.26, 0.22, 0.23, 0.…\n$ cut     &lt;ord&gt; Ideal, Premium, Good, Premium, Good, Very Good, Very Good, Ver…\n$ color   &lt;ord&gt; E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J, I,…\n$ clarity &lt;ord&gt; SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS1, …\n$ depth   &lt;dbl&gt; 61.5, 59.8, 56.9, 62.4, 63.3, 62.8, 62.3, 61.9, 65.1, 59.4, 64…\n$ table   &lt;dbl&gt; 55, 61, 65, 58, 58, 57, 57, 55, 61, 61, 55, 56, 61, 54, 62, 58…\n$ price   &lt;int&gt; 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340, 34…\n$ x       &lt;dbl&gt; 3.95, 3.89, 4.05, 4.20, 4.34, 3.94, 3.95, 4.07, 3.87, 4.00, 4.…\n$ y       &lt;dbl&gt; 3.98, 3.84, 4.07, 4.23, 4.35, 3.96, 3.98, 4.11, 3.78, 4.05, 4.…\n$ z       &lt;dbl&gt; 2.43, 2.31, 2.31, 2.63, 2.75, 2.48, 2.47, 2.53, 2.49, 2.39, 2.…\n\n\n\nskim(diamonds)\n\n\nData summary\n\n\nName\ndiamonds\n\n\nNumber of rows\n53940\n\n\nNumber of columns\n10\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n3\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ncut\n0\n1\nTRUE\n5\nIde: 21551, Pre: 13791, Ver: 12082, Goo: 4906\n\n\ncolor\n0\n1\nTRUE\n7\nG: 11292, E: 9797, F: 9542, H: 8304\n\n\nclarity\n0\n1\nTRUE\n8\nSI1: 13065, VS2: 12258, SI2: 9194, VS1: 8171\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ncarat\n0\n1\n0.80\n0.47\n0.2\n0.40\n0.70\n1.04\n5.01\n▇▂▁▁▁\n\n\ndepth\n0\n1\n61.75\n1.43\n43.0\n61.00\n61.80\n62.50\n79.00\n▁▁▇▁▁\n\n\ntable\n0\n1\n57.46\n2.23\n43.0\n56.00\n57.00\n59.00\n95.00\n▁▇▁▁▁\n\n\nprice\n0\n1\n3932.80\n3989.44\n326.0\n950.00\n2401.00\n5324.25\n18823.00\n▇▂▁▁▁\n\n\nx\n0\n1\n5.73\n1.12\n0.0\n4.71\n5.70\n6.54\n10.74\n▁▁▇▃▁\n\n\ny\n0\n1\n5.73\n1.14\n0.0\n4.72\n5.71\n6.54\n58.90\n▇▁▁▁▁\n\n\nz\n0\n1\n3.54\n0.71\n0.0\n2.91\n3.53\n4.04\n31.80\n▇▁▁▁▁\n\n\n\n\n\n\ninspect(diamonds)\n\n\ncategorical variables:  \n     name   class levels     n missing\n1     cut ordered      5 53940       0\n2   color ordered      7 53940       0\n3 clarity ordered      8 53940       0\n                                   distribution\n1 Ideal (40%), Premium (25.6%) ...             \n2 G (20.9%), E (18.2%), F (17.7%) ...          \n3 SI1 (24.2%), VS2 (22.7%), SI2 (17%) ...      \n\nquantitative variables:  \n   name   class   min     Q1  median      Q3      max         mean           sd\n1 carat numeric   0.2   0.40    0.70    1.04     5.01    0.7979397    0.4740112\n2 depth numeric  43.0  61.00   61.80   62.50    79.00   61.7494049    1.4326213\n3 table numeric  43.0  56.00   57.00   59.00    95.00   57.4571839    2.2344906\n4 price integer 326.0 950.00 2401.00 5324.25 18823.00 3932.7997219 3989.4397381\n5     x numeric   0.0   4.71    5.70    6.54    10.74    5.7311572    1.1217607\n6     y numeric   0.0   4.72    5.71    6.54    58.90    5.7345260    1.1421347\n7     z numeric   0.0   2.91    3.53    4.04    31.80    3.5387338    0.7056988\n      n missing\n1 53940       0\n2 53940       0\n3 53940       0\n4 53940       0\n5 53940       0\n6 53940       0\n7 53940       0\n\n\n\ngf_histogram(~price, data = diamonds) %&gt;%\n  gf_labs(\n    title = \"Plot 1A: Diamond Prices\",\n    caption = \"ggformula\"\n  )\n\n\n\n\n\n\n\n\n\ngf_histogram(~price, fill = ~color, data = diamonds) %&gt;%\n  gf_labs(title = \"Plot 3A: Diamond Prices\", caption = \"ggformula\")\n\n\n\n\n\n\n\n\n\ndiamonds %&gt;%\n  gf_histogram(~price, fill = ~cut, color = \"black\", alpha = 0.5) %&gt;%\n  gf_facet_wrap(~cut, scales = \"free_y\", nrow = 2) %&gt;%\n  gf_labs(\n    title = \"Plot 3D: Prices Filled and Facetted by Cut\",\n    subtitle = \"Free y-scale\",\n    caption = \"ggformula\"\n  ) %&gt;%\n  gf_theme(theme(\n    axis.text.x =\n      element_text(\n        angle = 45,\n        hjust = 1\n      ),   # fill- ~CUT - how price of diamonds is relating to quality \n            \n  ))\n\n\n\n\n\n\n\n\n\nrace_df &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/race.csv\")\n\nRows: 1207 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): event, race, city, country, participation\ndbl  (6): race_year_id, distance, elevation_gain, elevation_loss, aid_statio...\ndate (1): date\ntime (1): start_time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nrank_df &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/ultra_rankings.csv\")\n\nRows: 137803 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): runner, time, gender, nationality\ndbl (4): race_year_id, rank, age, time_in_seconds\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nglimpse(race_df)\n\nRows: 1,207\nColumns: 13\n$ race_year_id   &lt;dbl&gt; 68140, 72496, 69855, 67856, 70469, 66887, 67851, 68241,…\n$ event          &lt;chr&gt; \"Peak District Ultras\", \"UTMB®\", \"Grand Raid des Pyréné…\n$ race           &lt;chr&gt; \"Millstone 100\", \"UTMB®\", \"Ultra Tour 160\", \"PERSENK UL…\n$ city           &lt;chr&gt; \"Castleton\", \"Chamonix\", \"vielle-Aure\", \"Asenovgrad\", \"…\n$ country        &lt;chr&gt; \"United Kingdom\", \"France\", \"France\", \"Bulgaria\", \"Turk…\n$ date           &lt;date&gt; 2021-09-03, 2021-08-27, 2021-08-20, 2021-08-20, 2021-0…\n$ start_time     &lt;time&gt; 19:00:00, 17:00:00, 05:00:00, 18:00:00, 18:00:00, 17:0…\n$ participation  &lt;chr&gt; \"solo\", \"Solo\", \"solo\", \"solo\", \"solo\", \"solo\", \"solo\",…\n$ distance       &lt;dbl&gt; 166.9, 170.7, 167.0, 164.0, 159.9, 159.9, 163.8, 163.9,…\n$ elevation_gain &lt;dbl&gt; 4520, 9930, 9980, 7490, 100, 9850, 5460, 4630, 6410, 31…\n$ elevation_loss &lt;dbl&gt; -4520, -9930, -9980, -7500, -100, -9850, -5460, -4660, …\n$ aid_stations   &lt;dbl&gt; 10, 11, 13, 13, 12, 15, 5, 8, 13, 23, 13, 5, 12, 15, 0,…\n$ participants   &lt;dbl&gt; 150, 2300, 600, 150, 0, 300, 0, 200, 120, 100, 300, 50,…\n\n\n\nglimpse(rank_df)\n\nRows: 137,803\nColumns: 8\n$ race_year_id    &lt;dbl&gt; 68140, 68140, 68140, 68140, 68140, 68140, 68140, 68140…\n$ rank            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, NA, NA, NA,…\n$ runner          &lt;chr&gt; \"VERHEUL Jasper\", \"MOULDING JON\", \"RICHARDSON Phill\", …\n$ time            &lt;chr&gt; \"26H 35M 25S\", \"27H 0M 29S\", \"28H 49M 7S\", \"30H 53M 37…\n$ age             &lt;dbl&gt; 30, 43, 38, 55, 48, 31, 55, 40, 47, 29, 48, 47, 52, 49…\n$ gender          &lt;chr&gt; \"M\", \"M\", \"M\", \"W\", \"W\", \"M\", \"W\", \"W\", \"M\", \"M\", \"M\",…\n$ nationality     &lt;chr&gt; \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\"…\n$ time_in_seconds &lt;dbl&gt; 95725, 97229, 103747, 111217, 117981, 118000, 120601, …\n\n\n\nrace_df %&gt;%\n  favstats(~distance, data = .)\n\n min    Q1 median     Q3   max     mean       sd    n missing\n   0 160.1  161.5 165.15 179.1 152.6187 39.87864 1207       0"
  },
  {
    "objectID": "posts/class4/index.html#quantities",
    "href": "posts/class4/index.html#quantities",
    "title": "quantities.qmd",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\n##\nlibrary(crosstable) # Fast stats for multiple variables in table form, \n\n\nAttaching package: 'crosstable'\n\nThe following object is masked from 'package:purrr':\n\n    compact\n\n\n\ndiamonds\n\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# ℹ 53,930 more rows\n\n\n\nglimpse(diamonds)\n\nRows: 53,940\nColumns: 10\n$ carat   &lt;dbl&gt; 0.23, 0.21, 0.23, 0.29, 0.31, 0.24, 0.24, 0.26, 0.22, 0.23, 0.…\n$ cut     &lt;ord&gt; Ideal, Premium, Good, Premium, Good, Very Good, Very Good, Ver…\n$ color   &lt;ord&gt; E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J, I,…\n$ clarity &lt;ord&gt; SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS1, …\n$ depth   &lt;dbl&gt; 61.5, 59.8, 56.9, 62.4, 63.3, 62.8, 62.3, 61.9, 65.1, 59.4, 64…\n$ table   &lt;dbl&gt; 55, 61, 65, 58, 58, 57, 57, 55, 61, 61, 55, 56, 61, 54, 62, 58…\n$ price   &lt;int&gt; 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340, 34…\n$ x       &lt;dbl&gt; 3.95, 3.89, 4.05, 4.20, 4.34, 3.94, 3.95, 4.07, 3.87, 4.00, 4.…\n$ y       &lt;dbl&gt; 3.98, 3.84, 4.07, 4.23, 4.35, 3.96, 3.98, 4.11, 3.78, 4.05, 4.…\n$ z       &lt;dbl&gt; 2.43, 2.31, 2.31, 2.63, 2.75, 2.48, 2.47, 2.53, 2.49, 2.39, 2.…\n\n\n\nskim(diamonds)\n\n\nData summary\n\n\nName\ndiamonds\n\n\nNumber of rows\n53940\n\n\nNumber of columns\n10\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n3\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ncut\n0\n1\nTRUE\n5\nIde: 21551, Pre: 13791, Ver: 12082, Goo: 4906\n\n\ncolor\n0\n1\nTRUE\n7\nG: 11292, E: 9797, F: 9542, H: 8304\n\n\nclarity\n0\n1\nTRUE\n8\nSI1: 13065, VS2: 12258, SI2: 9194, VS1: 8171\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ncarat\n0\n1\n0.80\n0.47\n0.2\n0.40\n0.70\n1.04\n5.01\n▇▂▁▁▁\n\n\ndepth\n0\n1\n61.75\n1.43\n43.0\n61.00\n61.80\n62.50\n79.00\n▁▁▇▁▁\n\n\ntable\n0\n1\n57.46\n2.23\n43.0\n56.00\n57.00\n59.00\n95.00\n▁▇▁▁▁\n\n\nprice\n0\n1\n3932.80\n3989.44\n326.0\n950.00\n2401.00\n5324.25\n18823.00\n▇▂▁▁▁\n\n\nx\n0\n1\n5.73\n1.12\n0.0\n4.71\n5.70\n6.54\n10.74\n▁▁▇▃▁\n\n\ny\n0\n1\n5.73\n1.14\n0.0\n4.72\n5.71\n6.54\n58.90\n▇▁▁▁▁\n\n\nz\n0\n1\n3.54\n0.71\n0.0\n2.91\n3.53\n4.04\n31.80\n▇▁▁▁▁\n\n\n\n\n\n\ninspect(diamonds)\n\n\ncategorical variables:  \n     name   class levels     n missing\n1     cut ordered      5 53940       0\n2   color ordered      7 53940       0\n3 clarity ordered      8 53940       0\n                                   distribution\n1 Ideal (40%), Premium (25.6%) ...             \n2 G (20.9%), E (18.2%), F (17.7%) ...          \n3 SI1 (24.2%), VS2 (22.7%), SI2 (17%) ...      \n\nquantitative variables:  \n   name   class   min     Q1  median      Q3      max         mean           sd\n1 carat numeric   0.2   0.40    0.70    1.04     5.01    0.7979397    0.4740112\n2 depth numeric  43.0  61.00   61.80   62.50    79.00   61.7494049    1.4326213\n3 table numeric  43.0  56.00   57.00   59.00    95.00   57.4571839    2.2344906\n4 price integer 326.0 950.00 2401.00 5324.25 18823.00 3932.7997219 3989.4397381\n5     x numeric   0.0   4.71    5.70    6.54    10.74    5.7311572    1.1217607\n6     y numeric   0.0   4.72    5.71    6.54    58.90    5.7345260    1.1421347\n7     z numeric   0.0   2.91    3.53    4.04    31.80    3.5387338    0.7056988\n      n missing\n1 53940       0\n2 53940       0\n3 53940       0\n4 53940       0\n5 53940       0\n6 53940       0\n7 53940       0\n\n\n\ngf_histogram(~price, data = diamonds) %&gt;%\n  gf_labs(\n    title = \"Plot 1A: Diamond Prices\",\n    caption = \"ggformula\"\n  )\n\n\n\n\n\n\n\n\n\ngf_histogram(~price, fill = ~color, data = diamonds) %&gt;%\n  gf_labs(title = \"Plot 3A: Diamond Prices\", caption = \"ggformula\")\n\n\n\n\n\n\n\n\n\ndiamonds %&gt;%\n  gf_histogram(~price, fill = ~cut, color = \"black\", alpha = 0.5) %&gt;%\n  gf_facet_wrap(~cut, scales = \"free_y\", nrow = 2) %&gt;%\n  gf_labs(\n    title = \"Plot 3D: Prices Filled and Facetted by Cut\",\n    subtitle = \"Free y-scale\",\n    caption = \"ggformula\"\n  ) %&gt;%\n  gf_theme(theme(\n    axis.text.x =\n      element_text(\n        angle = 45,\n        hjust = 1\n      ),   # fill- ~CUT - how price of diamonds is relating to quality \n            \n  ))\n\n\n\n\n\n\n\n\n\nrace_df &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/race.csv\")\n\nRows: 1207 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): event, race, city, country, participation\ndbl  (6): race_year_id, distance, elevation_gain, elevation_loss, aid_statio...\ndate (1): date\ntime (1): start_time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nrank_df &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/ultra_rankings.csv\")\n\nRows: 137803 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): runner, time, gender, nationality\ndbl (4): race_year_id, rank, age, time_in_seconds\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nglimpse(race_df)\n\nRows: 1,207\nColumns: 13\n$ race_year_id   &lt;dbl&gt; 68140, 72496, 69855, 67856, 70469, 66887, 67851, 68241,…\n$ event          &lt;chr&gt; \"Peak District Ultras\", \"UTMB®\", \"Grand Raid des Pyréné…\n$ race           &lt;chr&gt; \"Millstone 100\", \"UTMB®\", \"Ultra Tour 160\", \"PERSENK UL…\n$ city           &lt;chr&gt; \"Castleton\", \"Chamonix\", \"vielle-Aure\", \"Asenovgrad\", \"…\n$ country        &lt;chr&gt; \"United Kingdom\", \"France\", \"France\", \"Bulgaria\", \"Turk…\n$ date           &lt;date&gt; 2021-09-03, 2021-08-27, 2021-08-20, 2021-08-20, 2021-0…\n$ start_time     &lt;time&gt; 19:00:00, 17:00:00, 05:00:00, 18:00:00, 18:00:00, 17:0…\n$ participation  &lt;chr&gt; \"solo\", \"Solo\", \"solo\", \"solo\", \"solo\", \"solo\", \"solo\",…\n$ distance       &lt;dbl&gt; 166.9, 170.7, 167.0, 164.0, 159.9, 159.9, 163.8, 163.9,…\n$ elevation_gain &lt;dbl&gt; 4520, 9930, 9980, 7490, 100, 9850, 5460, 4630, 6410, 31…\n$ elevation_loss &lt;dbl&gt; -4520, -9930, -9980, -7500, -100, -9850, -5460, -4660, …\n$ aid_stations   &lt;dbl&gt; 10, 11, 13, 13, 12, 15, 5, 8, 13, 23, 13, 5, 12, 15, 0,…\n$ participants   &lt;dbl&gt; 150, 2300, 600, 150, 0, 300, 0, 200, 120, 100, 300, 50,…\n\n\n\nglimpse(rank_df)\n\nRows: 137,803\nColumns: 8\n$ race_year_id    &lt;dbl&gt; 68140, 68140, 68140, 68140, 68140, 68140, 68140, 68140…\n$ rank            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, NA, NA, NA,…\n$ runner          &lt;chr&gt; \"VERHEUL Jasper\", \"MOULDING JON\", \"RICHARDSON Phill\", …\n$ time            &lt;chr&gt; \"26H 35M 25S\", \"27H 0M 29S\", \"28H 49M 7S\", \"30H 53M 37…\n$ age             &lt;dbl&gt; 30, 43, 38, 55, 48, 31, 55, 40, 47, 29, 48, 47, 52, 49…\n$ gender          &lt;chr&gt; \"M\", \"M\", \"M\", \"W\", \"W\", \"M\", \"W\", \"W\", \"M\", \"M\", \"M\",…\n$ nationality     &lt;chr&gt; \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\", \"GBR\"…\n$ time_in_seconds &lt;dbl&gt; 95725, 97229, 103747, 111217, 117981, 118000, 120601, …\n\n\n\nrace_df %&gt;%\n  favstats(~distance, data = .)\n\n min    Q1 median     Q3   max     mean       sd    n missing\n   0 160.1  161.5 165.15 179.1 152.6187 39.87864 1207       0"
  },
  {
    "objectID": "posts/class4/index.html#section",
    "href": "posts/class4/index.html#section",
    "title": "quantities.qmd",
    "section": "",
    "text": "##\nrace_df %&gt;%\n  favstats(~participants, data = .)\n\n min Q1 median  Q3  max     mean       sd    n missing\n   0  0     21 150 2900 120.4872 281.8337 1207       0\n\n\n\nrank_df %&gt;%\n  drop_na() %&gt;%\n  favstats(time_in_seconds ~ gender, data = .)\n\n  gender  min      Q1 median       Q3    max     mean       sd      n missing\n1      M 3600 96536.5 115845 149761.5 288000 123271.1 37615.42 101643       0\n2      W 9191 96695.0 107062 131464.0 296806 117296.5 34604.26  18341       0\n\n\n\n## library(crosstable)\ncrosstable(time_in_seconds + age ~ gender, data = rank_df) %&gt;%\n  crosstable::as_flextable()\n\nlabelvariablegenderMWNAtime_in_secondsMin / Max3600.0 / 2.9e+059191.0 / 3.0e+058131.0 / 2.2e+05Med [IQR]1.2e+05 [9.7e+04;1.5e+05]1.1e+05 [9.7e+04;1.3e+05]1.2e+05 [9.9e+04;1.5e+05]Mean (std)1.2e+05 (3.8e+04)1.2e+05 (3.5e+04)1.2e+05 (4.4e+04)N (NA)101643 (15073)18341 (2716)28 (2)ageMin / Max0 / 133.00 / 81.029.0 / 59.0Med [IQR]47.0 [40.0;53.0]45.0 [39.0;52.0]40.5 [36.0;50.5]Mean (std)46.4 (10.2)45.3 (9.7)41.7 (9.0)N (NA)116716 (0)21057 (0)30 (0)\n\n\n\nrace_df %&gt;%\n  count(country) %&gt;%\n  arrange(desc(n))\n\n# A tibble: 61 × 2\n   country            n\n   &lt;chr&gt;          &lt;int&gt;\n 1 United States    438\n 2 United Kingdom   110\n 3 France            56\n 4 Australia         46\n 5 Sweden            46\n 6 China             45\n 7 Canada            32\n 8 Spain             27\n 9 Japan             24\n10 Poland            23\n# ℹ 51 more rows\n\n\n\nrace_df\n\n# A tibble: 1,207 × 13\n   race_year_id event    race  city  country date       start_time participation\n          &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;date&gt;     &lt;time&gt;     &lt;chr&gt;        \n 1        68140 Peak Di… Mill… Cast… United… 2021-09-03 19:00      solo         \n 2        72496 UTMB®    UTMB® Cham… France  2021-08-27 17:00      Solo         \n 3        69855 Grand R… Ultr… viel… France  2021-08-20 05:00      solo         \n 4        67856 Persenk… PERS… Asen… Bulgar… 2021-08-20 18:00      solo         \n 5        70469 Runfire… 100 … uluk… Turkey  2021-08-20 18:00      solo         \n 6        66887 Swiss A… 160KM Müns… Switze… 2021-08-15 17:00      solo         \n 7        67851 Salomon… Salo… Foll… Norway  2021-08-14 07:00      solo         \n 8        68241 Ultra T… 160KM Spa   Belgium 2021-08-14 07:00      solo         \n 9        70241 Québec … QMT-… Beau… Canada  2021-08-13 22:00      solo         \n10        69945 Bunketo… BBUT… LIND… Sweden  2021-08-07 10:00      solo         \n# ℹ 1,197 more rows\n# ℹ 5 more variables: distance &lt;dbl&gt;, elevation_gain &lt;dbl&gt;,\n#   elevation_loss &lt;dbl&gt;, aid_stations &lt;dbl&gt;, participants &lt;dbl&gt;\n\n\n\n## More bins\ngf_histogram(~price,\n  data = diamonds,\n  bins = 10\n) %&gt;%\n  gf_labs(\n    title = \"Plot 1B: Diamond Prices\",\n    caption = \"ggformula\"\n  )"
  },
  {
    "objectID": "posts/my-name-is-ok/index.html",
    "href": "posts/my-name-is-ok/index.html",
    "title": "Trial",
    "section": "",
    "text": "hello\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggformula)\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(babynames)\n\n\nbabynames\n\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# ℹ 1,924,655 more rows\n\n\n\nbabynames %&gt;% filter (name== \"Aditi\")\n\n# A tibble: 40 × 5\n    year sex   name      n       prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt;      &lt;dbl&gt;\n 1  1977 F     Aditi     5 0.00000304\n 2  1978 F     Aditi     9 0.00000548\n 3  1979 F     Aditi     9 0.00000522\n 4  1980 F     Aditi     6 0.00000337\n 5  1982 F     Aditi    10 0.00000551\n 6  1983 F     Aditi    12 0.00000671\n 7  1984 F     Aditi    10 0.00000555\n 8  1985 F     Aditi    17 0.00000921\n 9  1986 F     Aditi    22 0.0000119 \n10  1987 F     Aditi    21 0.0000112 \n# ℹ 30 more rows\n\n\n\nbabynames %&gt;%  filter(name==\"Aditi\") %&gt;% \n  gf_line (n~year)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbabynames %&gt;% filter (name== \"Radhika\")\n\n# A tibble: 48 × 5\n    year sex   name        n       prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;int&gt;      &lt;dbl&gt;\n 1  1966 F     Radhika     5 0.00000285\n 2  1971 F     Radhika     6 0.00000342\n 3  1972 F     Radhika     7 0.00000434\n 4  1973 F     Radhika     6 0.00000386\n 5  1974 F     Radhika    13 0.0000083 \n 6  1975 F     Radhika     6 0.00000384\n 7  1976 F     Radhika    12 0.00000763\n 8  1977 F     Radhika     9 0.00000547\n 9  1978 F     Radhika    12 0.0000073 \n10  1979 F     Radhika    12 0.00000696\n# ℹ 38 more rows\n\n\n\nbabynames %&gt;%  filter(name==\"Radhika\") %&gt;% \n  gf_line (n~year)\n\n\n\n\n\n\n\n\n\nbabynames %&gt;% filter(name == \"Preeti\" | name == \"Pretty\")\n\n# A tibble: 46 × 5\n    year sex   name       n       prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;int&gt;      &lt;dbl&gt;\n 1  1972 F     Preeti     7 0.00000434\n 2  1973 F     Preeti     9 0.00000579\n 3  1975 F     Preeti     9 0.00000577\n 4  1976 F     Preeti    10 0.00000636\n 5  1977 F     Preeti     9 0.00000547\n 6  1978 F     Preeti    14 0.00000852\n 7  1979 F     Preeti     7 0.00000406\n 8  1980 F     Preeti    16 0.00000899\n 9  1981 F     Preeti    11 0.00000615\n10  1982 F     Preeti    10 0.00000551\n# ℹ 36 more rows"
  },
  {
    "objectID": "posts/my-name-is-ok/index.html#cat-cat-cat-cat",
    "href": "posts/my-name-is-ok/index.html#cat-cat-cat-cat",
    "title": "Trial",
    "section": "",
    "text": "babynames %&gt;% filter (name== \"Radhika\")\n\n# A tibble: 48 × 5\n    year sex   name        n       prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;int&gt;      &lt;dbl&gt;\n 1  1966 F     Radhika     5 0.00000285\n 2  1971 F     Radhika     6 0.00000342\n 3  1972 F     Radhika     7 0.00000434\n 4  1973 F     Radhika     6 0.00000386\n 5  1974 F     Radhika    13 0.0000083 \n 6  1975 F     Radhika     6 0.00000384\n 7  1976 F     Radhika    12 0.00000763\n 8  1977 F     Radhika     9 0.00000547\n 9  1978 F     Radhika    12 0.0000073 \n10  1979 F     Radhika    12 0.00000696\n# ℹ 38 more rows\n\n\n\nbabynames %&gt;%  filter(name==\"Radhika\") %&gt;% \n  gf_line (n~year)\n\n\n\n\n\n\n\n\n\nbabynames %&gt;% filter(name == \"Preeti\" | name == \"Pretty\")\n\n# A tibble: 46 × 5\n    year sex   name       n       prop\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;int&gt;      &lt;dbl&gt;\n 1  1972 F     Preeti     7 0.00000434\n 2  1973 F     Preeti     9 0.00000579\n 3  1975 F     Preeti     9 0.00000577\n 4  1976 F     Preeti    10 0.00000636\n 5  1977 F     Preeti     9 0.00000547\n 6  1978 F     Preeti    14 0.00000852\n 7  1979 F     Preeti     7 0.00000406\n 8  1980 F     Preeti    16 0.00000899\n 9  1981 F     Preeti    11 0.00000615\n10  1982 F     Preeti    10 0.00000551\n# ℹ 36 more rows"
  },
  {
    "objectID": "posts/A1/index.html",
    "href": "posts/A1/index.html",
    "title": "A1: summaries",
    "section": "",
    "text": "Reading mpg\n\nmpg\n\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   &lt;chr&gt;        &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# ℹ 224 more rows\n\n\nExamining the data set using glimpse, inspect and skimr\n\ndplyr::glimpse(mpg)\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;int&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;chr&gt; \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;chr&gt; \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        &lt;chr&gt; \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n\n\n\nmosaic::inspect(mpg)\n\n\ncategorical variables:  \n          name     class levels   n missing\n1 manufacturer character     15 234       0\n2        model character     38 234       0\n3        trans character     10 234       0\n4          drv character      3 234       0\n5           fl character      5 234       0\n6        class character      7 234       0\n                                   distribution\n1 dodge (15.8%), toyota (14.5%) ...            \n2 caravan 2wd (4.7%) ...                       \n3 auto(l4) (35.5%), manual(m5) (24.8%) ...     \n4 f (45.3%), 4 (44%), r (10.7%)                \n5 r (71.8%), p (22.2%), e (3.4%) ...           \n6 suv (26.5%), compact (20.1%) ...             \n\nquantitative variables:  \n   name   class    min     Q1 median     Q3  max        mean       sd   n\n1 displ numeric    1.6    2.4    3.3    4.6    7    3.471795 1.291959 234\n2  year integer 1999.0 1999.0 2003.5 2008.0 2008 2003.500000 4.509646 234\n3   cyl integer    4.0    4.0    6.0    8.0    8    5.888889 1.611534 234\n4   cty integer    9.0   14.0   17.0   19.0   35   16.858974 4.255946 234\n5   hwy integer   12.0   18.0   24.0   27.0   44   23.440171 5.954643 234\n  missing\n1       0\n2       0\n3       0\n4       0\n5       0\n\n\n\nskimr::skim(mpg) \n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n0\n1\n4\n10\n0\n15\n0\n\n\nmodel\n0\n1\n2\n22\n0\n38\n0\n\n\ntrans\n0\n1\n8\n10\n0\n10\n0\n\n\ndrv\n0\n1\n1\n1\n0\n3\n0\n\n\nfl\n0\n1\n1\n1\n0\n5\n0\n\n\nclass\n0\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n0\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n▇▆▆▃▁\n\n\nyear\n0\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n▇▁▁▁▇\n\n\ncyl\n0\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n▇▁▇▁▇\n\n\ncty\n0\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n▆▇▃▁▁\n\n\nhwy\n0\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n▅▅▇▁▁\n\n\n\n\n\nmunging\n\nmpg_modified &lt;- mpg %&gt;%\n  dplyr::mutate(\n    cyl = as_factor(cyl),\n    fl = as_factor(fl),\n    drv = as_factor(drv),\n    class = as_factor(class),\n    trans = as_factor(trans)\n  )\nglimpse(mpg_modified)\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;fct&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;fct&gt; auto(l5), manual(m5), manual(m6), auto(av), auto(l5), man…\n$ drv          &lt;fct&gt; f, f, f, f, f, f, f, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, r, …\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;fct&gt; p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, r, …\n$ class        &lt;fct&gt; compact, compact, compact, compact, compact, compact, com…"
  },
  {
    "objectID": "posts/A1/index.html#code-replication",
    "href": "posts/A1/index.html#code-replication",
    "title": "A1: summaries",
    "section": "",
    "text": "Reading the mpg df\n\n\nmpg \n\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   &lt;chr&gt;        &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# ℹ 224 more rows\n\n\n\nExamining the data set\n\ndplyr::glimpse(mpg)\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;int&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;chr&gt; \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;chr&gt; \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        &lt;chr&gt; \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "about",
    "section": "",
    "text": "loading…"
  },
  {
    "objectID": "posts/A1/index.html#code-replication-for-mpg-dataset",
    "href": "posts/A1/index.html#code-replication-for-mpg-dataset",
    "title": "A1: summaries",
    "section": "",
    "text": "Reading mpg\n\nmpg\n\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   &lt;chr&gt;        &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n 1 audi         a4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 audi         a4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 audi         a4           2    2008     4 manu… f        20    31 p     comp…\n 4 audi         a4           2    2008     4 auto… f        21    30 p     comp…\n 5 audi         a4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 audi         a4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 audi         a4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 audi         a4 quattro   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 audi         a4 quattro   1.8  1999     4 auto… 4        16    25 p     comp…\n10 audi         a4 quattro   2    2008     4 manu… 4        20    28 p     comp…\n# ℹ 224 more rows\n\n\nExamining the data set using glimpse, inspect and skimr\n\ndplyr::glimpse(mpg)\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;int&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;chr&gt; \"auto(l5)\", \"manual(m5)\", \"manual(m6)\", \"auto(av)\", \"auto…\n$ drv          &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"4\", \"4\", \"4\", \"4\", \"4…\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;chr&gt; \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p…\n$ class        &lt;chr&gt; \"compact\", \"compact\", \"compact\", \"compact\", \"compact\", \"c…\n\n\n\nmosaic::inspect(mpg)\n\n\ncategorical variables:  \n          name     class levels   n missing\n1 manufacturer character     15 234       0\n2        model character     38 234       0\n3        trans character     10 234       0\n4          drv character      3 234       0\n5           fl character      5 234       0\n6        class character      7 234       0\n                                   distribution\n1 dodge (15.8%), toyota (14.5%) ...            \n2 caravan 2wd (4.7%) ...                       \n3 auto(l4) (35.5%), manual(m5) (24.8%) ...     \n4 f (45.3%), 4 (44%), r (10.7%)                \n5 r (71.8%), p (22.2%), e (3.4%) ...           \n6 suv (26.5%), compact (20.1%) ...             \n\nquantitative variables:  \n   name   class    min     Q1 median     Q3  max        mean       sd   n\n1 displ numeric    1.6    2.4    3.3    4.6    7    3.471795 1.291959 234\n2  year integer 1999.0 1999.0 2003.5 2008.0 2008 2003.500000 4.509646 234\n3   cyl integer    4.0    4.0    6.0    8.0    8    5.888889 1.611534 234\n4   cty integer    9.0   14.0   17.0   19.0   35   16.858974 4.255946 234\n5   hwy integer   12.0   18.0   24.0   27.0   44   23.440171 5.954643 234\n  missing\n1       0\n2       0\n3       0\n4       0\n5       0\n\n\n\nskimr::skim(mpg) \n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n0\n1\n4\n10\n0\n15\n0\n\n\nmodel\n0\n1\n2\n22\n0\n38\n0\n\n\ntrans\n0\n1\n8\n10\n0\n10\n0\n\n\ndrv\n0\n1\n1\n1\n0\n3\n0\n\n\nfl\n0\n1\n1\n1\n0\n5\n0\n\n\nclass\n0\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n0\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n▇▆▆▃▁\n\n\nyear\n0\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n▇▁▁▁▇\n\n\ncyl\n0\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n▇▁▇▁▇\n\n\ncty\n0\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n▆▇▃▁▁\n\n\nhwy\n0\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n▅▅▇▁▁\n\n\n\n\n\nmunging\n\nmpg_modified &lt;- mpg %&gt;%\n  dplyr::mutate(\n    cyl = as_factor(cyl),\n    fl = as_factor(fl),\n    drv = as_factor(drv),\n    class = as_factor(class),\n    trans = as_factor(trans)\n  )\nglimpse(mpg_modified)\n\nRows: 234\nColumns: 11\n$ manufacturer &lt;chr&gt; \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"audi\", \"…\n$ model        &lt;chr&gt; \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4\", \"a4 quattro\", \"…\n$ displ        &lt;dbl&gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2.…\n$ year         &lt;int&gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 200…\n$ cyl          &lt;fct&gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8, …\n$ trans        &lt;fct&gt; auto(l5), manual(m5), manual(m6), auto(av), auto(l5), man…\n$ drv          &lt;fct&gt; f, f, f, f, f, f, f, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, r, …\n$ cty          &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 1…\n$ hwy          &lt;int&gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, 2…\n$ fl           &lt;fct&gt; p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, p, r, …\n$ class        &lt;fct&gt; compact, compact, compact, compact, compact, compact, com…"
  },
  {
    "objectID": "posts/A1/index.html#reading-the-data-again",
    "href": "posts/A1/index.html#reading-the-data-again",
    "title": "A1: summaries",
    "section": "Reading the data again",
    "text": "Reading the data again\n\nmathanxiety_modified\n\n# A tibble: 599 × 6\n     Age Gender Grade      AMAS RCMAS Arith\n   &lt;int&gt; &lt;fct&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1    11 Boy    Secondary     9    20     6\n 2    11 Boy    Secondary    18     8     6\n 3    11 Girl   Secondary    23    26     5\n 4    11 Girl   Secondary    19    18     7\n 5    11 Boy    Secondary    23    20     1\n 6    11 Girl   Secondary    27    33     1\n 7    11 Boy    Secondary    22    23     4\n 8    11 Boy    Secondary    17    11     7\n 9    10 Girl   Secondary    28    32     2\n10    11 Boy    Secondary    20    30     6\n# ℹ 589 more rows"
  },
  {
    "objectID": "posts/A1/index.html#similarly-for-grade",
    "href": "posts/A1/index.html#similarly-for-grade",
    "title": "A1: summaries",
    "section": "similarly for grade…",
    "text": "similarly for grade…\n\ndo the anxiety levels vary based on the students’ grade level.\n\nmathanxiety_modified %&gt;%\n  group_by(Grade) %&gt;%\n  summarise( average_AMAS = mean(AMAS),   \n    average_RCMAS = mean(RCMAS), average_Arith = mean(Arith), \n    count = n()                                \n  )\n\n# A tibble: 2 × 5\n  Grade     average_AMAS average_RCMAS average_Arith count\n  &lt;chr&gt;            &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt;\n1 Primary           21.8          19.6          5.81   401\n2 Secondary         22.3          18.5          4.28   198\n\n\n\n\nInferences:\nAnxiety levels seem pretty consistent across both grades.\nPrimary grade student experience seem to experience higher anxiety levels, also need to take into consideration that their sample size is larger\n\n\nUsing favstats… overview of anxiety scores across all exams by gender\n\nAMA\n\nmathanxiety_modified %&gt;%\n  mosaic::favstats(AMAS ~ Gender, data = .) \n\n  Gender min Q1 median Q3 max     mean       sd   n missing\n1    Boy   4 17     21 26  45 21.16718 6.506321 323       0\n2   Girl   9 19     23 28  40 22.93478 6.588372 276       0\n\n\n\n\n\nArith\n\nmathanxiety_modified %&gt;%\n  mosaic::favstats(Arith ~ Gender, data = .) \n\n  Gender min Q1 median Q3 max     mean       sd   n missing\n1    Boy   0  4      6  7   8 5.272446 2.122070 323       0\n2   Girl   0  4      6  7   8 5.336957 2.088639 276       0\n\n\nRCMAS\n\nmathanxiety_modified %&gt;%\n  mosaic::favstats(RCMAS ~ Gender, data = .) \n\n  Gender min Q1 median Q3 max     mean       sd   n missing\n1    Boy   1 13     18 23  41 18.11765 7.534090 323       0\n2   Girl   3 15     20 26  38 20.55435 7.404712 276       0\n\n\n\n\n# Check the names of the columns in your dataset\ncolnames(math_anxiety)\n\n[1] \"Age\"    \"Gender\" \"Grade\"  \"AMAS\"   \"RCMAS\"  \"Arith\""
  },
  {
    "objectID": "posts/A1_part2/index.html",
    "href": "posts/A1_part2/index.html",
    "title": "A1: Counts",
    "section": "",
    "text": "taxi &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/taxi.csv\")\n\nRows: 10000 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): tip, company, local, dow, month\ndbl (3): rownames, distance, hour\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntaxi\n\n# A tibble: 10,000 × 8\n   rownames tip   distance company                      local dow   month  hour\n      &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;                        &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n 1        1 yes      17.2  Chicago Independents         no    Thu   Feb      16\n 2        2 yes       0.88 City Service                 yes   Thu   Mar       8\n 3        3 yes      18.1  other                        no    Mon   Feb      18\n 4        4 yes      20.7  Chicago Independents         no    Mon   Apr       8\n 5        5 yes      12.2  Chicago Independents         no    Sun   Mar      21\n 6        6 yes       0.94 Sun Taxi                     yes   Sat   Apr      23\n 7        7 yes      17.5  Flash Cab                    no    Fri   Mar      12\n 8        8 yes      17.7  other                        no    Sun   Jan       6\n 9        9 yes       1.85 Taxicab Insurance Agency Llc no    Fri   Apr      12\n10       10 yes       1.47 City Service                 no    Tue   Mar      14\n# ℹ 9,990 more rows\n\n\n\nglimpse(taxi)\n\nRows: 10,000\nColumns: 8\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      &lt;chr&gt; \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"…\n$ distance &lt;dbl&gt; 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  &lt;chr&gt; \"Chicago Independents\", \"City Service\", \"other\", \"Chicago Ind…\n$ local    &lt;chr&gt; \"no\", \"yes\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"no\",…\n$ dow      &lt;chr&gt; \"Thu\", \"Thu\", \"Mon\", \"Mon\", \"Sun\", \"Sat\", \"Fri\", \"Sun\", \"Fri\"…\n$ month    &lt;chr&gt; \"Feb\", \"Mar\", \"Feb\", \"Apr\", \"Mar\", \"Apr\", \"Mar\", \"Jan\", \"Apr\"…\n$ hour     &lt;dbl&gt; 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n\n\n\ninspect(taxi)\n\n\ncategorical variables:  \n     name     class levels     n missing\n1     tip character      2 10000       0\n2 company character      7 10000       0\n3   local character      2 10000       0\n4     dow character      7 10000       0\n5   month character      4 10000       0\n                                   distribution\n1 yes (92.1%), no (7.9%)                       \n2 other (27.1%) ...                            \n3 no (81.2%), yes (18.8%)                      \n4 Thu (19.6%), Wed (17.5%), Tue (16.3%) ...    \n5 Apr (31.8%), Mar (31.4%), Feb (20.4%) ...    \n\nquantitative variables:  \n      name   class min      Q1  median        Q3     max        mean\n1 rownames numeric   1 2500.75 5000.50 7500.2500 10000.0 5000.500000\n2 distance numeric   0    0.94    1.78   15.5625    42.3    6.224144\n3     hour numeric   0   11.00   15.00   18.0000    23.0   14.177300\n           sd     n missing\n1 2886.895680 10000       0\n2    7.381397 10000       0\n3    4.359904 10000       0\n\n\n\nskim(taxi)\n\n\nData summary\n\n\nName\ntaxi\n\n\nNumber of rows\n10000\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ntip\n0\n1\n2\n3\n0\n2\n0\n\n\ncompany\n0\n1\n5\n28\n0\n7\n0\n\n\nlocal\n0\n1\n2\n3\n0\n2\n0\n\n\ndow\n0\n1\n3\n3\n0\n7\n0\n\n\nmonth\n0\n1\n3\n3\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrownames\n0\n1\n5000.50\n2886.90\n1\n2500.75\n5000.50\n7500.25\n10000.0\n▇▇▇▇▇\n\n\ndistance\n0\n1\n6.22\n7.38\n0\n0.94\n1.78\n15.56\n42.3\n▇▁▂▁▁\n\n\nhour\n0\n1\n14.18\n4.36\n0\n11.00\n15.00\n18.00\n23.0\n▁▃▅▇▃\n\n\n\n\n\n\n## Convert `dow`, `local`, and `month` into ordered factors\ntaxi_modified &lt;- taxi %&gt;%\n  mutate(\n    dow = factor(dow,\n      levels = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),\n      labels = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),\n      ordered = TRUE\n    ),\n    ##\n    local = factor(local,\n      levels = c(\"no\", \"yes\"),\n      labels = c(\"no\", \"yes\"),\n      ordered = TRUE\n    ),\n    ##\n    month = factor(month,\n      levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n      labels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n      ordered = TRUE\n    )\n  )\ntaxi_modified %&gt;% glimpse()\n\nRows: 10,000\nColumns: 8\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      &lt;chr&gt; \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"…\n$ distance &lt;dbl&gt; 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  &lt;chr&gt; \"Chicago Independents\", \"City Service\", \"other\", \"Chicago Ind…\n$ local    &lt;ord&gt; no, yes, no, no, no, yes, no, no, no, no, no, no, no, yes, no…\n$ dow      &lt;ord&gt; Thu, Thu, Mon, Mon, Sun, Sat, Fri, Sun, Fri, Tue, Tue, Sun, W…\n$ month    &lt;ord&gt; Feb, Mar, Feb, Apr, Mar, Apr, Mar, Jan, Apr, Mar, Mar, Apr, A…\n$ hour     &lt;dbl&gt; 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n\n\n\ngf_bar(~tip, data = taxi_modified) %&gt;%\n  gf_labs(title = \"Plot 1A: Counts of Tipss\")\n\n\n\n\n\n\n\n\n\ntaxi_modified %&gt;%\n  gf_bar(~tip,\n    fill = ~local, \n    position = \"dodge\"\n  ) %&gt;%\n  gf_labs(title = \"Plot 2A: Dodged Bar Chart\")\n\n\n\n\n\n\n\n\n\ntaxi_modified %&gt;%\n  gf_bar(~company,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(title = \"Plot 2A: Dodged Bar Chart\") %&gt;%\n  gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))\n\n\n\n\n\n\n\n\n\ngf_bar(~dow, fill = ~tip, position=\"fill\", data = taxi_modified) %&gt;%\n  gf_labs(title = \"Plot C: Counts of Tips by Day of Week\")\n\n\n\n\n\n\n\n\n\ngf_bar(~month, fill = ~tip,  data = taxi_modified) %&gt;%\n  gf_labs(title = \"Plot D: Counts of Tips by Month\")"
  },
  {
    "objectID": "posts/A1_part2/index.html#code-replication",
    "href": "posts/A1_part2/index.html#code-replication",
    "title": "A1: Counts",
    "section": "",
    "text": "taxi &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/taxi.csv\")\n\nRows: 10000 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): tip, company, local, dow, month\ndbl (3): rownames, distance, hour\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntaxi\n\n# A tibble: 10,000 × 8\n   rownames tip   distance company                      local dow   month  hour\n      &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;                        &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n 1        1 yes      17.2  Chicago Independents         no    Thu   Feb      16\n 2        2 yes       0.88 City Service                 yes   Thu   Mar       8\n 3        3 yes      18.1  other                        no    Mon   Feb      18\n 4        4 yes      20.7  Chicago Independents         no    Mon   Apr       8\n 5        5 yes      12.2  Chicago Independents         no    Sun   Mar      21\n 6        6 yes       0.94 Sun Taxi                     yes   Sat   Apr      23\n 7        7 yes      17.5  Flash Cab                    no    Fri   Mar      12\n 8        8 yes      17.7  other                        no    Sun   Jan       6\n 9        9 yes       1.85 Taxicab Insurance Agency Llc no    Fri   Apr      12\n10       10 yes       1.47 City Service                 no    Tue   Mar      14\n# ℹ 9,990 more rows\n\n\n\nglimpse(taxi)\n\nRows: 10,000\nColumns: 8\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      &lt;chr&gt; \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"…\n$ distance &lt;dbl&gt; 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  &lt;chr&gt; \"Chicago Independents\", \"City Service\", \"other\", \"Chicago Ind…\n$ local    &lt;chr&gt; \"no\", \"yes\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"no\",…\n$ dow      &lt;chr&gt; \"Thu\", \"Thu\", \"Mon\", \"Mon\", \"Sun\", \"Sat\", \"Fri\", \"Sun\", \"Fri\"…\n$ month    &lt;chr&gt; \"Feb\", \"Mar\", \"Feb\", \"Apr\", \"Mar\", \"Apr\", \"Mar\", \"Jan\", \"Apr\"…\n$ hour     &lt;dbl&gt; 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n\n\n\ninspect(taxi)\n\n\ncategorical variables:  \n     name     class levels     n missing\n1     tip character      2 10000       0\n2 company character      7 10000       0\n3   local character      2 10000       0\n4     dow character      7 10000       0\n5   month character      4 10000       0\n                                   distribution\n1 yes (92.1%), no (7.9%)                       \n2 other (27.1%) ...                            \n3 no (81.2%), yes (18.8%)                      \n4 Thu (19.6%), Wed (17.5%), Tue (16.3%) ...    \n5 Apr (31.8%), Mar (31.4%), Feb (20.4%) ...    \n\nquantitative variables:  \n      name   class min      Q1  median        Q3     max        mean\n1 rownames numeric   1 2500.75 5000.50 7500.2500 10000.0 5000.500000\n2 distance numeric   0    0.94    1.78   15.5625    42.3    6.224144\n3     hour numeric   0   11.00   15.00   18.0000    23.0   14.177300\n           sd     n missing\n1 2886.895680 10000       0\n2    7.381397 10000       0\n3    4.359904 10000       0\n\n\n\nskim(taxi)\n\n\nData summary\n\n\nName\ntaxi\n\n\nNumber of rows\n10000\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ntip\n0\n1\n2\n3\n0\n2\n0\n\n\ncompany\n0\n1\n5\n28\n0\n7\n0\n\n\nlocal\n0\n1\n2\n3\n0\n2\n0\n\n\ndow\n0\n1\n3\n3\n0\n7\n0\n\n\nmonth\n0\n1\n3\n3\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrownames\n0\n1\n5000.50\n2886.90\n1\n2500.75\n5000.50\n7500.25\n10000.0\n▇▇▇▇▇\n\n\ndistance\n0\n1\n6.22\n7.38\n0\n0.94\n1.78\n15.56\n42.3\n▇▁▂▁▁\n\n\nhour\n0\n1\n14.18\n4.36\n0\n11.00\n15.00\n18.00\n23.0\n▁▃▅▇▃\n\n\n\n\n\n\n## Convert `dow`, `local`, and `month` into ordered factors\ntaxi_modified &lt;- taxi %&gt;%\n  mutate(\n    dow = factor(dow,\n      levels = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),\n      labels = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),\n      ordered = TRUE\n    ),\n    ##\n    local = factor(local,\n      levels = c(\"no\", \"yes\"),\n      labels = c(\"no\", \"yes\"),\n      ordered = TRUE\n    ),\n    ##\n    month = factor(month,\n      levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n      labels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n      ordered = TRUE\n    )\n  )\ntaxi_modified %&gt;% glimpse()\n\nRows: 10,000\nColumns: 8\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      &lt;chr&gt; \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"…\n$ distance &lt;dbl&gt; 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n$ company  &lt;chr&gt; \"Chicago Independents\", \"City Service\", \"other\", \"Chicago Ind…\n$ local    &lt;ord&gt; no, yes, no, no, no, yes, no, no, no, no, no, no, no, yes, no…\n$ dow      &lt;ord&gt; Thu, Thu, Mon, Mon, Sun, Sat, Fri, Sun, Fri, Tue, Tue, Sun, W…\n$ month    &lt;ord&gt; Feb, Mar, Feb, Apr, Mar, Apr, Mar, Jan, Apr, Mar, Mar, Apr, A…\n$ hour     &lt;dbl&gt; 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n\n\n\ngf_bar(~tip, data = taxi_modified) %&gt;%\n  gf_labs(title = \"Plot 1A: Counts of Tipss\")\n\n\n\n\n\n\n\n\n\ntaxi_modified %&gt;%\n  gf_bar(~tip,\n    fill = ~local, \n    position = \"dodge\"\n  ) %&gt;%\n  gf_labs(title = \"Plot 2A: Dodged Bar Chart\")\n\n\n\n\n\n\n\n\n\ntaxi_modified %&gt;%\n  gf_bar(~company,\n    fill = ~tip,\n    position = \"fill\"\n  ) %&gt;%\n  gf_labs(title = \"Plot 2A: Dodged Bar Chart\") %&gt;%\n  gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))\n\n\n\n\n\n\n\n\n\ngf_bar(~dow, fill = ~tip, position=\"fill\", data = taxi_modified) %&gt;%\n  gf_labs(title = \"Plot C: Counts of Tips by Day of Week\")\n\n\n\n\n\n\n\n\n\ngf_bar(~month, fill = ~tip,  data = taxi_modified) %&gt;%\n  gf_labs(title = \"Plot D: Counts of Tips by Month\")"
  },
  {
    "objectID": "posts/A1_part2/index.html#examining",
    "href": "posts/A1_part2/index.html#examining",
    "title": "A1: Counts",
    "section": "Examining",
    "text": "Examining\n\nglimpse(pokemon)\n\nRows: 800\nColumns: 5\n$ name   &lt;chr&gt; \"Bulbasaur\", \"Ivysaur\", \"Venusaur\", \"VenusaurMega Venusaur\", \"C…\n$ type   &lt;list&gt; &lt;\"Grass\", \"Poison\"&gt;, &lt;\"Grass\", \"Poison\"&gt;, &lt;\"Grass\", \"Poison\"&gt;,…\n$ total  &lt;int&gt; 318, 405, 525, 625, 309, 405, 534, 634, 634, 314, 405, 530, 630…\n$ hp     &lt;int&gt; 45, 60, 80, 80, 39, 58, 78, 78, 78, 44, 59, 79, 79, 45, 50, 60,…\n$ attack &lt;int&gt; 49, 62, 82, 100, 52, 64, 84, 130, 104, 48, 63, 83, 103, 30, 20,…\n\n\n\nskim(pokemon)\n\n\nData summary\n\n\nName\npokemon\n\n\nNumber of rows\n800\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nlist\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nname\n0\n1\n3\n25\n0\n800\n0\n\n\n\nVariable type: list\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nn_unique\nmin_length\nmax_length\n\n\n\n\ntype\n0\n1\n154\n1\n2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ntotal\n0\n1\n435.10\n119.96\n180\n330\n450\n515\n780\n▃▆▇▂▁\n\n\nhp\n0\n1\n69.26\n25.53\n1\n50\n65\n80\n255\n▃▇▁▁▁\n\n\nattack\n0\n1\n79.00\n32.46\n5\n55\n75\n100\n190\n▂▇▆▂▁\n\n\n\n\n\n\ninspect(pokemon)\n\nList of 800\n $ : chr [1:2] \"Grass\" \"Poison\"\n $ : chr [1:2] \"Grass\" \"Poison\"\n $ : chr [1:2] \"Grass\" \"Poison\"\n $ : chr [1:2] \"Grass\" \"Poison\"\n $ : chr \"Fire\"\n $ : chr \"Fire\"\n $ : chr [1:2] \"Fire\" \"Flying\"\n $ : chr [1:2] \"Fire\" \"Dragon\"\n $ : chr [1:2] \"Fire\" \"Flying\"\n $ : chr \"Water\"\n $ : chr \"Water\"\n $ : chr \"Water\"\n $ : chr \"Water\"\n $ : chr \"Bug\"\n $ : chr \"Bug\"\n $ : chr [1:2] \"Bug\" \"Flying\"\n $ : chr [1:2] \"Bug\" \"Poison\"\n $ : chr [1:2] \"Bug\" \"Poison\"\n $ : chr [1:2] \"Bug\" \"Poison\"\n $ : chr [1:2] \"Bug\" \"Poison\"\n $ : chr [1:2] \"Normal\" \"Flying\"\n $ : chr [1:2] \"Normal\" \"Flying\"\n $ : chr [1:2] \"Normal\" \"Flying\"\n $ : chr [1:2] \"Normal\" \"Flying\"\n $ : chr \"Normal\"\n $ : chr \"Normal\"\n $ : chr [1:2] \"Normal\" \"Flying\"\n $ : chr [1:2] \"Normal\" \"Flying\"\n $ : chr \"Poison\"\n $ : chr \"Poison\"\n $ : chr \"Electric\"\n $ : chr \"Electric\"\n $ : chr \"Ground\"\n $ : chr \"Ground\"\n $ : chr \"Poison\"\n $ : chr \"Poison\"\n $ : chr [1:2] \"Poison\" \"Ground\"\n $ : chr \"Poison\"\n $ : chr \"Poison\"\n $ : chr [1:2] \"Poison\" \"Ground\"\n $ : chr \"Fairy\"\n $ : chr \"Fairy\"\n $ : chr \"Fire\"\n $ : chr \"Fire\"\n $ : chr [1:2] \"Normal\" \"Fairy\"\n $ : chr [1:2] \"Normal\" \"Fairy\"\n $ : chr [1:2] \"Poison\" \"Flying\"\n $ : chr [1:2] \"Poison\" \"Flying\"\n $ : chr [1:2] \"Grass\" \"Poison\"\n $ : chr [1:2] \"Grass\" \"Poison\"\n $ : chr [1:2] \"Grass\" \"Poison\"\n $ : chr [1:2] \"Bug\" \"Grass\"\n $ : chr [1:2] \"Bug\" \"Grass\"\n $ : chr [1:2] \"Bug\" \"Poison\"\n $ : chr [1:2] \"Bug\" \"Poison\"\n $ : chr \"Ground\"\n $ : chr \"Ground\"\n $ : chr \"Normal\"\n $ : chr \"Normal\"\n $ : chr \"Water\"\n $ : chr \"Water\"\n $ : chr \"Fighting\"\n $ : chr \"Fighting\"\n $ : chr \"Fire\"\n $ : chr \"Fire\"\n $ : chr \"Water\"\n $ : chr \"Water\"\n $ : chr [1:2] \"Water\" \"Fighting\"\n $ : chr \"Psychic\"\n $ : chr \"Psychic\"\n $ : chr \"Psychic\"\n $ : chr \"Psychic\"\n $ : chr \"Fighting\"\n $ : chr \"Fighting\"\n $ : chr \"Fighting\"\n $ : chr [1:2] \"Grass\" \"Poison\"\n $ : chr [1:2] \"Grass\" \"Poison\"\n $ : chr [1:2] \"Grass\" \"Poison\"\n $ : chr [1:2] \"Water\" \"Poison\"\n $ : chr [1:2] \"Water\" \"Poison\"\n $ : chr [1:2] \"Rock\" \"Ground\"\n $ : chr [1:2] \"Rock\" \"Ground\"\n $ : chr [1:2] \"Rock\" \"Ground\"\n $ : chr \"Fire\"\n $ : chr \"Fire\"\n $ : chr [1:2] \"Water\" \"Psychic\"\n $ : chr [1:2] \"Water\" \"Psychic\"\n $ : chr [1:2] \"Water\" \"Psychic\"\n $ : chr [1:2] \"Electric\" \"Steel\"\n $ : chr [1:2] \"Electric\" \"Steel\"\n $ : chr [1:2] \"Normal\" \"Flying\"\n $ : chr [1:2] \"Normal\" \"Flying\"\n $ : chr [1:2] \"Normal\" \"Flying\"\n $ : chr \"Water\"\n $ : chr [1:2] \"Water\" \"Ice\"\n $ : chr \"Poison\"\n $ : chr \"Poison\"\n $ : chr \"Water\"\n $ : chr [1:2] \"Water\" \"Ice\"\n  [list output truncated]\n\n\n\n variables:  \ndata frame with 0 columns and 0 rows\n\ncategorical variables:  \n  name     class levels   n missing\n1 name character    800 800       0\n                                   distribution\n1 Abomasnow (0.1%) ...                         \n\nquantitative variables:  \n    name   class min  Q1 median  Q3 max      mean        sd   n missing\n1  total integer 180 330    450 515 780 435.10250 119.96304 800       0\n2     hp integer   1  50     65  80 255  69.25875  25.53467 800       0\n3 attack integer   5  55     75 100 190  79.00125  32.45737 800       0"
  },
  {
    "objectID": "posts/A1_part2/index.html#data-munging-data-dictionary",
    "href": "posts/A1_part2/index.html#data-munging-data-dictionary",
    "title": "A1: Counts",
    "section": "Data munging & Data Dictionary",
    "text": "Data munging & Data Dictionary\n\ntried converting list into factor, could not.\nleaving type as it is.\n\n\n\n  Variable_Name Data_Type\n1          Name character\n2          Type    factor\n3            HP   integer\n4        Attack   integer\n5         Total   integer\n                                                             Description\n1                                               The name of the Pokémon.\n2 The type(s) of the Pokémon, affecting battle strengths and weaknesses.\n3                   Total health of the Pokémon in battles (Hit Points).\n4                                 Damage dealt by the Pokémon's attacks.\n5                                                      Total HP overall."
  },
  {
    "objectID": "posts/A1_part2/index.html#questions",
    "href": "posts/A1_part2/index.html#questions",
    "title": "A1: Counts",
    "section": "Questions",
    "text": "Questions\n\npokemon_summary &lt;- pokemon %&gt;%\ngroup_by(type) %&gt;%\nsummarize(avg_hp = mean(hp), avg_attack = mean(attack))\n\npokemon_summary\n\n# A tibble: 154 × 3\n   type      avg_hp avg_attack\n   &lt;list&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n 1 &lt;chr [2]&gt;   64.9       70.5\n 2 &lt;chr [1]&gt;   62.7       78.4\n 3 &lt;chr [2]&gt;   82         95.3\n 4 &lt;chr [2]&gt;   78        130  \n 5 &lt;chr [1]&gt;   66.8       71.8\n 6 &lt;chr [1]&gt;   53.1       50.4\n 7 &lt;chr [2]&gt;   63         70.1\n 8 &lt;chr [2]&gt;   53.8       68.3\n 9 &lt;chr [2]&gt;   62.0       73.0\n10 &lt;chr [1]&gt;   81.1       73.8\n# ℹ 144 more rows\n\n\naverage hp and attack for each type\n\nAbandoning this data set as list needs to be converted into factor to get accurate data viz."
  },
  {
    "objectID": "posts/A1_part2/index.html#examining-1",
    "href": "posts/A1_part2/index.html#examining-1",
    "title": "A1: Counts",
    "section": "Examining",
    "text": "Examining\n\nglimpse(fertility)\n\nRows: 254,654\nColumns: 9\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ morekids &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"…\n$ gender1  &lt;chr&gt; \"male\", \"female\", \"male\", \"male\", \"female\", \"male\", \"female\",…\n$ gender2  &lt;chr&gt; \"female\", \"male\", \"female\", \"female\", \"female\", \"female\", \"ma…\n$ age      &lt;dbl&gt; 27, 30, 27, 35, 30, 26, 29, 33, 29, 27, 28, 28, 35, 34, 32, 2…\n$ afam     &lt;chr&gt; \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", …\n$ hispanic &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"…\n$ other    &lt;chr&gt; \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"…\n$ work     &lt;dbl&gt; 0, 30, 0, 0, 22, 40, 0, 52, 0, 0, 0, 52, 52, 52, 8, 7, 0, 40,…\n\n\n\nskim(fertility)\n\n\nData summary\n\n\nName\nfertility\n\n\nNumber of rows\n254654\n\n\nNumber of columns\n9\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmorekids\n0\n1\n2\n3\n0\n2\n0\n\n\ngender1\n0\n1\n4\n6\n0\n2\n0\n\n\ngender2\n0\n1\n4\n6\n0\n2\n0\n\n\nafam\n0\n1\n2\n3\n0\n2\n0\n\n\nhispanic\n0\n1\n2\n3\n0\n2\n0\n\n\nother\n0\n1\n2\n3\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrownames\n0\n1\n127327.50\n73512.42\n1\n63664.25\n127327.5\n190990.8\n254654\n▇▇▇▇▇\n\n\nage\n0\n1\n30.39\n3.39\n21\n28.00\n31.0\n33.0\n35\n▁▃▅▇▇\n\n\nwork\n0\n1\n19.02\n21.87\n0\n0.00\n5.0\n44.0\n52\n▇▁▁▁▃\n\n\n\n\n\n\ninspect(fertility)\n\n\ncategorical variables:  \n      name     class levels      n missing\n1 morekids character      2 254654       0\n2  gender1 character      2 254654       0\n3  gender2 character      2 254654       0\n4     afam character      2 254654       0\n5 hispanic character      2 254654       0\n6    other character      2 254654       0\n                                   distribution\n1 no (61.9%), yes (38.1%)                      \n2 male (51.4%), female (48.6%)                 \n3 male (51.3%), female (48.7%)                 \n4 no (94.8%), yes (5.2%)                       \n5 no (92.6%), yes (7.4%)                       \n6 no (94.4%), yes (5.6%)                       \n\nquantitative variables:  \n      name   class min       Q1   median       Q3    max         mean\n1 rownames numeric   1 63664.25 127327.5 190990.8 254654 127327.50000\n2      age numeric  21    28.00     31.0     33.0     35     30.39327\n3     work numeric   0     0.00      5.0     44.0     52     19.01833\n            sd      n missing\n1 73512.422063 254654       0\n2     3.386447 254654       0\n3    21.867277 254654       0"
  },
  {
    "objectID": "posts/A1_part2/index.html#data-munging-and-dictionary",
    "href": "posts/A1_part2/index.html#data-munging-and-dictionary",
    "title": "A1: Counts",
    "section": "Data Munging and Dictionary",
    "text": "Data Munging and Dictionary\n\n\n  Variable_Name Data_Type                              Description\n1      morekids    factor do the respondents have more than 2 kids\n2       gender1    factor                gender of the first child\n3       gender2    factor               gender of the second child\n4      hispanic    factor                        are they hispanic\n5           age   integer                                      age\n\n\n\nfertility_modified &lt;- fertility %&gt;%\nmutate(\n    morekids= as.factor(morekids),  \n    gender1 = as.factor(gender1),\n    gender2 = as.factor(gender2),\n    hispanic = as.factor(hispanic),\n    other = as.factor(other),\n    \n  )\nglimpse(fertility_modified)\n\nRows: 254,654\nColumns: 9\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ morekids &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, yes, no, no, no, no, …\n$ gender1  &lt;fct&gt; male, female, male, male, female, male, female, male, female,…\n$ gender2  &lt;fct&gt; female, male, female, female, female, female, male, male, mal…\n$ age      &lt;dbl&gt; 27, 30, 27, 35, 30, 26, 29, 33, 29, 27, 28, 28, 35, 34, 32, 2…\n$ afam     &lt;chr&gt; \"no\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", …\n$ hispanic &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ other    &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ work     &lt;dbl&gt; 0, 30, 0, 0, 22, 40, 0, 52, 0, 0, 0, 52, 52, 52, 8, 7, 0, 40,…"
  },
  {
    "objectID": "posts/A1_part2/index.html#bar-graphs",
    "href": "posts/A1_part2/index.html#bar-graphs",
    "title": "A1: Counts",
    "section": "Bar graphs",
    "text": "Bar graphs\n\ngf_bar(~morekids, data = fertility_modified) %&gt;%\n  gf_labs(title = \"\")\n\n\n\n\n\n\n\n\n\nDoes the Hispanic ethnic group tend to have a higher number of children?\n\nfertility_modified %&gt;%\n  gf_bar(~morekids, \n         fill = ~hispanic, \n         position = \"dodge\") %&gt;%\n\n  gf_labs(title = \"Plot: Dodged Bar Chart\")\n\n\n\n\n\n\n\n\n\n\nInferences\n\nmajority, regardless of their ethnicity, indicate they do not have more kids.\nvast majority of hispanic respondents seem to not have more kids.\n\n\n\nfertility_modified %&gt;%\n  gf_bar(~morekids, \n         fill = ~gender1, \n         position = \"dodge\") %&gt;%\n  \n  gf_labs(title = \"Plot: Dodged Bar Chart\")\n\n\n\n\n\n\n\n\n\nInference\n\npeople with male kids as their firstborn prefer to not have more kids."
  },
  {
    "objectID": "posts/A2-Grain Transportation Cartels/index.html",
    "href": "posts/A2-Grain Transportation Cartels/index.html",
    "title": "A-2 Dataset-1",
    "section": "",
    "text": "Background Research"
  },
  {
    "objectID": "posts/A2-Grain Transportation Cartels/index.html#background-research",
    "href": "posts/A2-Grain Transportation Cartels/index.html#background-research",
    "title": "Grain Transportation Cartels",
    "section": "",
    "text": "Background Research"
  },
  {
    "objectID": "posts/class 6/index.html",
    "href": "posts/class 6/index.html",
    "title": "index",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(infer)\n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(broom) # Clean test results in tibble form\nlibrary(resampledata) # Datasets from Chihara and Hesterberg's book\n\n\nAttaching package: 'resampledata'\n\nThe following object is masked from 'package:datasets':\n\n    Titanic\n\nlibrary(openintro) # More datasets\n\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nAttaching package: 'openintro'\n\nThe following object is masked from 'package:mosaic':\n\n    dotPlot\n\nThe following objects are masked from 'package:lattice':\n\n    ethanol, lsegments\n\n\n\nset.seed(40)  # for replication\n# Data as individual vectors ( for t.tests etc)\ny &lt;- rnorm(50, mean = 2, sd = 2)\n\n# And as tibble too\nmydata &lt;- tibble(y = y)\nmydata\n\n# A tibble: 50 × 1\n        y\n    &lt;dbl&gt;\n 1  2.96 \n 2  2.99 \n 3  0.281\n 4  0.342\n 5  1.36 \n 6 -0.608\n 7 -0.843\n 8  5.49 \n 9  1.42 \n10 -0.618\n# ℹ 40 more rows\n\n\n##tibble- dataframe\n##y &lt;- rnorm- generate 50 random numbers\n##so we have vector(array?) y with 50 normally distributed random numbers - data is symetrically distribted around the mean\n\nmydata %&gt;%\n    gf_density(~y) %&gt;% ##distribution of y values \n    gf_fitdistr(dist = \"dnorm\") %&gt;% ##normal distribution based on mean and sd? always a symmetrical bell curve \n    gf_labs(title = \"Densities of Original Data Variables\", subtitle = \"Compared with Normal Density\")\n\n\n\n\n\n\n\n\n\n# t-test\nt1 &lt;- mosaic::t_test(\n          y, # Name of variable\n          mu = 0, # belief of population mean\n          alternative = \"two.sided\") %&gt;% # Check both sides\n  \n  broom::tidy() # Make results presentable, and plottable!!\nt1\n\n# A tibble: 1 × 8\n  estimate statistic     p.value parameter conf.low conf.high method alternative\n     &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;      \n1     2.05      6.79     1.43e-8        49     1.44      2.65 One S… two.sided  \n\n\n\nmean_belief_pop &lt;- 0  # Assert our belief\n# Sample Mean\nmean_y &lt;- mean(y)\nmean_y\n\n[1] 2.045689\n\n\n\n## Sample standard error\nstd_error &lt;- sd(y)/sqrt(length(y))\nstd_error\n\n[1] 0.3014752\n\n\n\n## Confidence Interval of Observed Mean\nconf_int &lt;- tibble(ci_low = mean_y - 1.96 * std_error, ci_high = mean_y + 1.96 *\n    std_error)\nconf_int\n\n# A tibble: 1 × 2\n  ci_low ci_high\n   &lt;dbl&gt;   &lt;dbl&gt;\n1   1.45    2.64\n\n\n\n## Difference between actual and believed mean\nmean_diff &lt;- mean_y - mean_belief_pop\nmean_diff\n\n[1] 2.045689\n\n\n\n## Test Statistic\nt &lt;- mean_diff/std_error\nt\n\n[1] 6.785596\n\n\n##sample mean is 2.04, likelihood of zero being the mean is very low\n#p value, t-test\n##based on the assumption that our sample is a bell curve\n##permutation"
  },
  {
    "objectID": "posts/class5/index.html",
    "href": "posts/class5/index.html",
    "title": "groups",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(ggformula)\nlibrary(palmerpenguins)# Our new favourite dataseti\nlibrary(skimr)\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\n\n\n\nwhen we want to compare multiple distributions\n\nwages &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/stevedata/gss_wages.csv\")\n\nRows: 61697 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): occrecode, wrkstat, gender, educcat, maritalcat\ndbl (7): rownames, year, realrinc, age, occ10, prestg10, childs\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\nglimpse(wages)\n\nRows: 61,697\nColumns: 12\n$ rownames   &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ year       &lt;dbl&gt; 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,…\n$ realrinc   &lt;dbl&gt; 4935, 43178, NA, NA, 18505, 22206, 55515, NA, NA, 4935, NA,…\n$ age        &lt;dbl&gt; 21, 41, 83, 69, 58, 30, 48, 67, 51, 54, 89, 71, 27, 30, 22,…\n$ occ10      &lt;dbl&gt; 5620, 2040, NA, NA, 5820, 910, 230, 6355, 4720, 3940, 4810,…\n$ occrecode  &lt;chr&gt; \"Office and Administrative Support\", \"Professional\", NA, NA…\n$ prestg10   &lt;dbl&gt; 25, 66, NA, NA, 37, 45, 59, 49, 28, 38, 47, 45, 50, 29, 33,…\n$ childs     &lt;dbl&gt; 0, 3, 2, 2, 0, 0, 2, 1, 2, 2, 3, 1, 4, 3, 0, 1, 2, 3, 4, 8,…\n$ wrkstat    &lt;chr&gt; \"School\", \"Full-Time\", \"Housekeeper\", \"Housekeeper\", \"Full-…\n$ gender     &lt;chr&gt; \"Male\", \"Male\", \"Female\", \"Female\", \"Female\", \"Male\", \"Male…\n$ educcat    &lt;chr&gt; \"High School\", \"Bachelor\", \"Less Than High School\", \"Less T…\n$ maritalcat &lt;chr&gt; \"Married\", \"Married\", \"Widowed\", \"Widowed\", \"Never Married\"…\n\n\n\ninspect(wages)\n\n\ncategorical variables:  \n        name     class levels     n missing\n1  occrecode character     11 58136    3561\n2    wrkstat character      8 61676      21\n3     gender character      2 61697       0\n4    educcat character      5 61562     135\n5 maritalcat character      5 61670      27\n                                   distribution\n1 Professional (19%), Service (16.9%) ...      \n2 Full-Time (49.4%), Housekeeper (15.1%) ...   \n3 Female (56.1%), Male (43.9%)                 \n4 High School (51.5%) ...                      \n5 Married (51.7%), Never Married (21.8%) ...   \n\nquantitative variables:  \n      name   class  min    Q1 median    Q3      max         mean           sd\n1 rownames numeric    1 15425  30849 46273  61697.0 30849.000000 17810.534116\n2     year numeric 1974  1985   1996  2006   2018.0  1996.073715    12.794470\n3 realrinc numeric  227  8156  16563 27171 480144.5 22326.359234 28581.794499\n4      age numeric   18    32     44    59     89.0    46.176177    17.561065\n5    occ10 numeric   10  2710   4720  6230   9997.0  4695.774081  2627.724076\n6 prestg10 numeric   16    33     42    50     80.0    43.060701    12.987526\n7   childs numeric    0     0      2     3      8.0     1.923457     1.763569\n      n missing\n1 61697       0\n2 61697       0\n3 37887   23810\n4 61478     219\n5 58136    3561\n6 57511    4186\n7 61508     189\n\n\n\nskim(wages)\n\n\nData summary\n\n\nName\nwages\n\n\nNumber of rows\n61697\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\noccrecode\n3561\n0.94\n5\n37\n0\n11\n0\n\n\nwrkstat\n21\n1.00\n5\n23\n0\n8\n0\n\n\ngender\n0\n1.00\n4\n6\n0\n2\n0\n\n\neduccat\n135\n1.00\n8\n21\n0\n5\n0\n\n\nmaritalcat\n27\n1.00\n7\n13\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrownames\n0\n1.00\n30849.00\n17810.53\n1\n15425\n30849\n46273\n61697.0\n▇▇▇▇▇\n\n\nyear\n0\n1.00\n1996.07\n12.79\n1974\n1985\n1996\n2006\n2018.0\n▆▇▇▇▇\n\n\nrealrinc\n23810\n0.61\n22326.36\n28581.79\n227\n8156\n16563\n27171\n480144.5\n▇▁▁▁▁\n\n\nage\n219\n1.00\n46.18\n17.56\n18\n32\n44\n59\n89.0\n▇▇▆▅▂\n\n\nocc10\n3561\n0.94\n4695.77\n2627.72\n10\n2710\n4720\n6230\n9997.0\n▃▅▇▂▃\n\n\nprestg10\n4186\n0.93\n43.06\n12.99\n16\n33\n42\n50\n80.0\n▃▇▇▃▁\n\n\nchilds\n189\n1.00\n1.92\n1.76\n0\n0\n2\n3\n8.0\n▇▇▂▁▁\n\n\n\n\n\n\n\n\n\nwages_modified &lt;-\n  wages %&gt;%\n  tidyr::drop_na(realrinc)\n\n\n\n\n\nwages_modified %&gt;%\n  gf_boxplot(realrinc ~ \"Income\") %&gt;% # Dummy X-axis \"variable\"\n  gf_labs(\n    title = \"Plot 1A: Income has a skewed distribution\",\n    subtitle = \"Many outliers on the high side\"\n  )\n\n\n\n\n\n\n\n\n\nwages_modified %&gt;%\n  gf_boxplot(\"Income\" ~ realrinc) %&gt;%  # Swapping axes for a horizontal boxplot\n  gf_labs(\n    title = \"Plot 1A: Income has a skewed distribution\",\n    subtitle = \"Many outliers on the high side\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nwages_modified %&gt;%\n  gf_boxplot(gender ~ realrinc) %&gt;%\n  gf_labs(title = \"Plot 2A: Income by Gender\")\n\n\n\n\n\n\n\n\n\nwages_modified %&gt;%\n  gf_boxplot(gender ~ log10(realrinc)) %&gt;% ##reduces effect of extreme values \n  gf_labs(title = \"Plot 2B: Log(Income) by Gender\")\n\n\n\n\n\n\n\n\n\nwages_modified %&gt;%\n  gf_boxplot(gender ~ realrinc, fill = ~gender) %&gt;%\n  gf_refine(scale_x_log10()) %&gt;%\n  gf_labs(title = \"Plot 2C: Income filled by Gender, log scale\")\n\n\n\n\n\n\n\n\nreal rinc against educcat (degrees)\n\nwages_modified &lt;-\n  wages %&gt;%\n  tidyr::drop_na(educcat)\n\n\nwages_modified %&gt;%\n  gf_boxplot(educcat ~ realrinc) %&gt;%\n  gf_labs(title = \"Plot 3A: Income by Education Category\")\n\nWarning: Removed 23716 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\nmany outliers, individual in each category earn significantly more hten others\n\n\nwages_modified %&gt;%\n  gf_boxplot(log10(realrinc) ~ educcat) %&gt;%\n  gf_labs(title = \"Plot 3A: Income by Education Category\")\n\nWarning: Removed 23716 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "posts/class5/index.html#examining",
    "href": "posts/class5/index.html#examining",
    "title": "groups",
    "section": "",
    "text": "glimpse(wages)\n\nRows: 61,697\nColumns: 12\n$ rownames   &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ year       &lt;dbl&gt; 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974, 1974,…\n$ realrinc   &lt;dbl&gt; 4935, 43178, NA, NA, 18505, 22206, 55515, NA, NA, 4935, NA,…\n$ age        &lt;dbl&gt; 21, 41, 83, 69, 58, 30, 48, 67, 51, 54, 89, 71, 27, 30, 22,…\n$ occ10      &lt;dbl&gt; 5620, 2040, NA, NA, 5820, 910, 230, 6355, 4720, 3940, 4810,…\n$ occrecode  &lt;chr&gt; \"Office and Administrative Support\", \"Professional\", NA, NA…\n$ prestg10   &lt;dbl&gt; 25, 66, NA, NA, 37, 45, 59, 49, 28, 38, 47, 45, 50, 29, 33,…\n$ childs     &lt;dbl&gt; 0, 3, 2, 2, 0, 0, 2, 1, 2, 2, 3, 1, 4, 3, 0, 1, 2, 3, 4, 8,…\n$ wrkstat    &lt;chr&gt; \"School\", \"Full-Time\", \"Housekeeper\", \"Housekeeper\", \"Full-…\n$ gender     &lt;chr&gt; \"Male\", \"Male\", \"Female\", \"Female\", \"Female\", \"Male\", \"Male…\n$ educcat    &lt;chr&gt; \"High School\", \"Bachelor\", \"Less Than High School\", \"Less T…\n$ maritalcat &lt;chr&gt; \"Married\", \"Married\", \"Widowed\", \"Widowed\", \"Never Married\"…\n\n\n\ninspect(wages)\n\n\ncategorical variables:  \n        name     class levels     n missing\n1  occrecode character     11 58136    3561\n2    wrkstat character      8 61676      21\n3     gender character      2 61697       0\n4    educcat character      5 61562     135\n5 maritalcat character      5 61670      27\n                                   distribution\n1 Professional (19%), Service (16.9%) ...      \n2 Full-Time (49.4%), Housekeeper (15.1%) ...   \n3 Female (56.1%), Male (43.9%)                 \n4 High School (51.5%) ...                      \n5 Married (51.7%), Never Married (21.8%) ...   \n\nquantitative variables:  \n      name   class  min    Q1 median    Q3      max         mean           sd\n1 rownames numeric    1 15425  30849 46273  61697.0 30849.000000 17810.534116\n2     year numeric 1974  1985   1996  2006   2018.0  1996.073715    12.794470\n3 realrinc numeric  227  8156  16563 27171 480144.5 22326.359234 28581.794499\n4      age numeric   18    32     44    59     89.0    46.176177    17.561065\n5    occ10 numeric   10  2710   4720  6230   9997.0  4695.774081  2627.724076\n6 prestg10 numeric   16    33     42    50     80.0    43.060701    12.987526\n7   childs numeric    0     0      2     3      8.0     1.923457     1.763569\n      n missing\n1 61697       0\n2 61697       0\n3 37887   23810\n4 61478     219\n5 58136    3561\n6 57511    4186\n7 61508     189\n\n\n\nskim(wages)\n\n\nData summary\n\n\nName\nwages\n\n\nNumber of rows\n61697\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\noccrecode\n3561\n0.94\n5\n37\n0\n11\n0\n\n\nwrkstat\n21\n1.00\n5\n23\n0\n8\n0\n\n\ngender\n0\n1.00\n4\n6\n0\n2\n0\n\n\neduccat\n135\n1.00\n8\n21\n0\n5\n0\n\n\nmaritalcat\n27\n1.00\n7\n13\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrownames\n0\n1.00\n30849.00\n17810.53\n1\n15425\n30849\n46273\n61697.0\n▇▇▇▇▇\n\n\nyear\n0\n1.00\n1996.07\n12.79\n1974\n1985\n1996\n2006\n2018.0\n▆▇▇▇▇\n\n\nrealrinc\n23810\n0.61\n22326.36\n28581.79\n227\n8156\n16563\n27171\n480144.5\n▇▁▁▁▁\n\n\nage\n219\n1.00\n46.18\n17.56\n18\n32\n44\n59\n89.0\n▇▇▆▅▂\n\n\nocc10\n3561\n0.94\n4695.77\n2627.72\n10\n2710\n4720\n6230\n9997.0\n▃▅▇▂▃\n\n\nprestg10\n4186\n0.93\n43.06\n12.99\n16\n33\n42\n50\n80.0\n▃▇▇▃▁\n\n\nchilds\n189\n1.00\n1.92\n1.76\n0\n0\n2\n3\n8.0\n▇▇▂▁▁"
  },
  {
    "objectID": "posts/class5/index.html#dictionary-munging",
    "href": "posts/class5/index.html#dictionary-munging",
    "title": "groups",
    "section": "",
    "text": "wages_modified &lt;-\n  wages %&gt;%\n  tidyr::drop_na(realrinc)"
  },
  {
    "objectID": "posts/class5/index.html#graphs",
    "href": "posts/class5/index.html#graphs",
    "title": "groups",
    "section": "",
    "text": "wages_modified %&gt;%\n  gf_boxplot(realrinc ~ \"Income\") %&gt;% # Dummy X-axis \"variable\"\n  gf_labs(\n    title = \"Plot 1A: Income has a skewed distribution\",\n    subtitle = \"Many outliers on the high side\"\n  )\n\n\n\n\n\n\n\n\n\nwages_modified %&gt;%\n  gf_boxplot(\"Income\" ~ realrinc) %&gt;%  # Swapping axes for a horizontal boxplot\n  gf_labs(\n    title = \"Plot 1A: Income has a skewed distribution\",\n    subtitle = \"Many outliers on the high side\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nwages_modified %&gt;%\n  gf_boxplot(gender ~ realrinc) %&gt;%\n  gf_labs(title = \"Plot 2A: Income by Gender\")\n\n\n\n\n\n\n\n\n\nwages_modified %&gt;%\n  gf_boxplot(gender ~ log10(realrinc)) %&gt;% ##reduces effect of extreme values \n  gf_labs(title = \"Plot 2B: Log(Income) by Gender\")\n\n\n\n\n\n\n\n\n\nwages_modified %&gt;%\n  gf_boxplot(gender ~ realrinc, fill = ~gender) %&gt;%\n  gf_refine(scale_x_log10()) %&gt;%\n  gf_labs(title = \"Plot 2C: Income filled by Gender, log scale\")\n\n\n\n\n\n\n\n\nreal rinc against educcat (degrees)\n\nwages_modified &lt;-\n  wages %&gt;%\n  tidyr::drop_na(educcat)\n\n\nwages_modified %&gt;%\n  gf_boxplot(educcat ~ realrinc) %&gt;%\n  gf_labs(title = \"Plot 3A: Income by Education Category\")\n\nWarning: Removed 23716 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\nmany outliers, individual in each category earn significantly more hten others\n\n\nwages_modified %&gt;%\n  gf_boxplot(log10(realrinc) ~ educcat) %&gt;%\n  gf_labs(title = \"Plot 3A: Income by Education Category\")\n\nWarning: Removed 23716 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "posts/class5.1/index.html",
    "href": "posts/class5.1/index.html",
    "title": "Change",
    "section": "",
    "text": "library(tidyverse) # Tidy data processing and plotting\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggformula) # Formula based plots\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(mosaic) # Our go-to package\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(skimr) # Another Data inspection package\n\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n\nlibrary(kableExtra) # Making good tables with data\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(GGally) # Corr plots\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\nlibrary(corrplot) # More corrplots\n\ncorrplot 0.94 loaded\n\nlibrary(ggExtra) # Making Combination Plots\n\n# devtools::install_github(\"rpruim/Lock5withR\")\nlibrary(Lock5withR) # Datasets\nlibrary(palmerpenguins) # A famous dataset\n\nlibrary(easystats) # Easy Statistical Analysis and Charts\n\n# Attaching packages: easystats 0.7.3 (red = needs update)\n✖ bayestestR  0.14.0   ✔ correlation 0.8.5 \n✔ datawizard  0.13.0   ✔ effectsize  0.8.9 \n✔ insight     0.20.5   ✔ modelbased  0.8.8 \n✔ performance 0.12.3   ✔ parameters  0.22.2\n✔ report      0.5.9    ✔ see         0.9.0 \n\nRestart the R-Session and update packages with `easystats::easystats_update()`.\n\nlibrary(correlation) # Different Types of Correlations\n# From the easystats collection of packages\n\n\nHollywoodMovies2011 -&gt; movies\nglimpse(movies)\n\nRows: 136\nColumns: 14\n$ Movie             &lt;fct&gt; \"Insidious\", \"Paranormal Activity 3\", \"Bad Teacher\",…\n$ LeadStudio        &lt;fct&gt; Sony, Independent, Independent, Warner Bros, Relativ…\n$ RottenTomatoes    &lt;int&gt; 67, 68, 44, 96, 90, 93, 75, 35, 63, 69, 69, 49, 26, …\n$ AudienceScore     &lt;int&gt; 65, 58, 38, 92, 77, 84, 91, 58, 74, 73, 72, 57, 68, …\n$ Story             &lt;fct&gt; Monster Force, Monster Force, Comedy, Rivalry, Rival…\n$ Genre             &lt;fct&gt; Horror, Horror, Comedy, Fantasy, Comedy, Romance, Dr…\n$ TheatersOpenWeek  &lt;int&gt; 2408, 3321, 3049, 4375, 2918, 944, 2534, 3615, NA, 2…\n$ BOAverageOpenWeek &lt;int&gt; 5511, 15829, 10365, 38672, 8995, 6177, 10278, 23775,…\n$ DomesticGross     &lt;dbl&gt; 54.01, 103.66, 100.29, 381.01, 169.11, 56.18, 169.22…\n$ ForeignGross      &lt;dbl&gt; 43.00, 98.24, 115.90, 947.10, 119.28, 83.00, 30.10, …\n$ WorldGross        &lt;dbl&gt; 97.009, 201.897, 216.196, 1328.111, 288.382, 139.177…\n$ Budget            &lt;dbl&gt; 1.5, 5.0, 20.0, 125.0, 32.5, 17.0, 25.0, 80.0, 0.2, …\n$ Profitability     &lt;dbl&gt; 64.672667, 40.379400, 10.809800, 10.624888, 8.873292…\n$ OpeningWeekend    &lt;dbl&gt; 13.27, 52.57, 31.60, 169.19, 26.25, 5.83, 26.04, 85.…\n\n\n\ninspect(movies)\n\n\ncategorical variables:  \n        name  class levels   n missing\n1      Movie factor    136 136       0\n2 LeadStudio factor     34 136       0\n3      Story factor     22 136       0\n4      Genre factor      9 136       0\n                                   distribution\n1 30 Minutes or Less (0.7%) ...                \n2 Independent (23.5%) ...                      \n3 Monster Force (14%), Comedy (10.3%) ...      \n4 Action (23.5%), Comedy (19.9%) ...           \n\nquantitative variables:  \n                name   class      min          Q1      median         Q3\n1     RottenTomatoes integer    4.000   29.250000   53.500000   78.00000\n2      AudienceScore integer   24.000   49.500000   61.000000   76.50000\n3   TheatersOpenWeek integer    3.000 2550.000000 2995.000000 3400.50000\n4  BOAverageOpenWeek integer 1513.000 3778.750000 5685.500000 8923.00000\n5      DomesticGross numeric    0.020   19.032500   37.355000   80.45750\n6       ForeignGross numeric    0.240   14.250000   47.000000  102.00000\n7         WorldGross numeric    0.025   30.706000   76.658500  173.69100\n8             Budget numeric    0.200   20.250000   36.500000   70.00000\n9      Profitability numeric    0.000    1.064754    2.198864    3.66705\n10    OpeningWeekend numeric    0.000    7.710000   13.100000   25.00000\n           max        mean           sd   n missing\n1     97.00000   53.194030    26.984673 134       2\n2     93.00000   61.600000    17.033856 135       1\n3   4375.00000 2828.475000   932.702579 120      16\n4  93230.00000 8338.825000 10284.468976 120      16\n5    381.01000   63.222761    69.417994 134       2\n6    947.10000   96.923388   156.437778 121      15\n7   1328.11100  150.742343   215.018634 134       2\n8    250.00000   53.481343    49.171503 134       2\n9     64.67267    3.314521     6.616088 134       2\n10   169.19000   20.343308    24.805660 133       3\n\n\n\nmovies_quant &lt;- movies %&gt;%\n  drop_na() %&gt;%\n  select(where(is.numeric))\nmovies_quant\n\n    RottenTomatoes AudienceScore TheatersOpenWeek BOAverageOpenWeek\n1               67            65             2408              5511\n2               68            58             3321             15829\n3               44            38             3049             10365\n4               96            92             4375             38672\n5               90            77             2918              8995\n6               93            84              944              6177\n7               75            91             2534             10278\n8               35            58             3615             23775\n9               69            73             2756              6860\n10              69            72             3040              9310\n11              49            57             3018              6512\n12              26            68             4061             34012\n13              35            67             4088             23937\n14              56            52             2994              8469\n15              71            73             3826             10252\n16              82            78             3379             10492\n17              83            87             3648             15024\n18              23            31             3328              2615\n19              23            50             3395             10489\n20              93            93             2458              3517\n21              93            79             2886              3929\n22              82            80             3925             12142\n23              55            57             3043              7183\n24              85            76             2199              4761\n25              71            68             2926              6364\n26              34            61             4155             21697\n27              61            56             3155              5715\n28              92            81             2961              5002\n29              93            86             3448              8672\n30              37            54             1719              2955\n31              30            39             2787              3390\n32              60            79             3703             10704\n33              38            55             1552              2470\n34              47            63             3167              7500\n35              47            54             3339              5524\n36              38            55             3122              3860\n37              60            72             2817              5979\n38              35            50             3417             10411\n39              77            80             3955             16618\n40              26            50             3579             10490\n41              78            81             3020              6326\n42              38            56             4115             16072\n43              22            40             3295              3534\n44              19            63             3548              8601\n45              78            75             3715             17512\n46              20            43             2985              4955\n47              71            71             3549              4383\n48              72            67             2840              7450\n49               4            29             2534              5921\n50              46            79             2214              4789\n51              58            81             3440              7942\n52              72            70             2802              4655\n53              36            59             3112             10349\n54              58            57             3305              5656\n55              32            57             3154              6167\n56              84            81             3507              5461\n57               4            46             3118              3504\n58              35            44             2950              4588\n59              10            32             2816              3769\n60              76            70             1826              5427\n61              84            63             3222              6935\n62              87            88             3641             15134\n63              83            76             3952              8623\n64              14            42             3482              5763\n65              71            67             2535              4880\n66              11            41             3030              4622\n67              95            89             2993              6516\n68              38            50             2473              3014\n69              44            47             3584              9335\n70              84            82             2707              4879\n71              88            69             3917              9722\n72              24            48             3017              2875\n73              34            46             2973              4405\n74              84            61                4             93230\n75              19            50             1952              5047\n76              68            61             3367              7135\n77              97            87             3440              8500\n78              16            25             2806              2995\n79              28            55             2614              3982\n80              24            50             3002              1806\n81              43            48             2888              4616\n82              24            53             2913              4645\n83              17            37             2864              5221\n84              53            52             2703              4226\n85              59            37             2760              3089\n86              75            68             3114              2477\n87              26            49             3276              3731\n88              91            79             2405              3267\n89              27            48             3816             13935\n90              23            48             3033              6284\n91              39            43             2296              3782\n92              44            50             3750              9715\n93               4            59             3438              7273\n94              23            31             2940              6060\n95              83            93             1869              2805\n96              83            84              247              7174\n97              41            59             3606              5889\n98               7            38             2661              3055\n99              25            48             2986              3132\n100             36            52             2996              2835\n101             45            38             2290              2265\n102             92            82             3376              3537\n103             56            65              707              4960\n104             22            34             3015              3324\n105             26            36             2769              3380\n106             50            48             2273              2259\n107             46            66              265              3856\n108             66            55              106              6111\n109             62            57               22              4890\n110             36            43             3117              2218\n111             38            62             2150              1513\n    DomesticGross ForeignGross WorldGross Budget Profitability OpeningWeekend\n1           54.01        43.00     97.009    1.5    64.6726667          13.27\n2          103.66        98.24    201.897    5.0    40.3794000          52.57\n3          100.29       115.90    216.196   20.0    10.8098000          31.60\n4          381.01       947.10   1328.111  125.0    10.6248880         169.19\n5          169.11       119.28    288.382   32.5     8.8732923          26.25\n6           56.18        83.00    139.177   17.0     8.1868824           5.83\n7          169.22        30.10    199.324   25.0     7.9729600          26.04\n8          254.46       327.00    581.464   80.0     7.2683000          85.95\n9           79.25        82.60    161.849   27.0     5.9944074          18.91\n10         117.54        92.10    209.638   35.0     5.9896571          28.30\n11          70.60        77.10    147.700   25.0     5.9080000          19.70\n12         260.80       374.00    634.800  110.0     5.7709091         138.12\n13         352.39       770.81   1123.195  195.0     5.7599744          97.85\n14          99.97        94.00    193.967   36.0     5.3879722          25.36\n15         143.62       341.02    484.634   90.0     5.3848222          39.23\n16         127.00       132.71    259.713   50.0     5.1942600          35.45\n17         176.70       304.52    481.226   93.0     5.1744731          54.81\n18          17.69         7.88     25.562    5.0     5.1124000           8.70\n19         142.61       419.54    562.158  110.0     5.1105273          35.61\n20          34.90         1.62     36.511    8.0     4.5638750           8.64\n21          34.68        32.33     67.007   15.0     4.4671333          11.34\n22         165.25       497.78    663.024  150.0     4.4201600          47.66\n23          63.69        67.10    130.786   30.0     4.3595333          21.86\n24          40.49        13.70     54.194   12.5     4.3355200          10.47\n25          55.80        93.74    149.541   35.0     4.2726000          18.62\n26         241.07       802.80   1043.871  250.0     4.1754840          90.15\n27          42.59       115.30    157.887   40.0     3.9471750          18.03\n28          54.71        68.57    123.278   32.0     3.8524375          14.81\n29         197.80       336.70    534.500  145.0     3.6862069          29.55\n30          13.84        41.40     55.241   15.0     3.6827333           5.08\n31          23.20        85.40    108.600   30.0     3.6200000           9.40\n32         179.04       261.00    440.040  125.0     3.5203200          39.63\n33           8.31       149.63    157.939   45.0     3.5097556           3.83\n34          52.70        19.72     72.416   21.0     3.4483810          23.75\n35          68.22       119.14    187.355   55.0     3.4064545          18.45\n36          36.49        90.90    127.393   40.0     3.1848250          12.05\n37          58.71        58.39    117.094   38.0     3.0814211          16.84\n38          83.55       128.27    211.818   70.0     3.0259714          35.57\n39         181.03       267.48    448.512  150.0     2.9900800          65.72\n40         108.09        75.87    183.953   63.0     2.9198889          37.54\n41          84.34        58.50    142.841   50.0     2.8568200          19.10\n42         191.45       360.40    551.850  200.0     2.7592500          66.14\n43          38.54        35.54     74.080   27.0     2.7437037          11.64\n44         103.03       111.92    214.945   80.0     2.6868125          30.51\n45         176.65       191.75    368.404  140.0     2.6314571          65.06\n46          33.00        63.00     96.000   37.0     2.5945946          14.80\n47          51.16        10.90     62.053   24.0     2.5855417          15.56\n48          62.50        65.37    127.868   50.2     2.5471713          21.16\n49          37.30         3.19     40.492   16.0     2.5307500          15.00\n50          43.85         0.41     44.267   18.0     2.4592778          10.60\n51          83.61       186.20    269.811  110.0     2.4528273          27.32\n52          37.41        60.57     97.983   40.0     2.4495750          13.04\n53          80.49       102.00    182.485   75.0     2.4331333          32.21\n54          38.18        58.96     97.137   40.0     2.4284250          18.69\n55          55.10        89.40    144.500   60.0     2.4083333          19.45\n56          71.08        16.86     87.947   37.0     2.3769459          19.15\n57          28.07        54.00     82.069   35.0     2.3448286          10.93\n58          45.06        38.10     83.160   36.0     2.3100000          13.54\n59          24.80        66.80     91.600   40.0     2.2900000          10.60\n60          31.18        14.25     45.429   20.0     2.2714500           9.91\n61          75.64        59.80    135.443   60.0     2.2573833          22.40\n62         146.41       207.22    353.623  160.0     2.2101437          55.10\n63         142.09       142.30    284.386  130.0     2.1875846          34.08\n64          80.36        89.94    170.301   80.0     2.1287625          20.07\n65          40.26        23.52     63.781   30.0     2.1260333          12.37\n66          37.66        51.50     89.162   42.0     2.1229048          14.01\n67          74.21        27.90    102.109   50.0     2.0421800          19.50\n68          23.18        16.48     39.664   20.0     1.9832000           7.45\n69          98.80       129.00    227.800  120.0     1.8983333          33.50\n70          58.01        17.00     75.009   40.0     1.8752250          13.21\n71         123.26       121.90    245.154  135.0     1.8159556          38.08\n72          20.25       111.90    132.147   75.0     1.7619600           8.67\n73          35.61        16.80     52.408   30.0     1.7469333          13.10\n74          13.30        41.00     54.303   32.0     1.6969687           0.37\n75          27.87         0.97     28.833   17.0     1.6960588           9.85\n76          74.50        47.00    121.504   75.0     1.6200533          24.03\n77          66.63         5.80     72.426   45.0     1.6094667          29.24\n78          18.88        19.83     38.702   25.0     1.5480800           8.40\n79          36.67        24.30     60.965   40.0     1.5241250          10.41\n80          14.01        16.42     30.426   20.0     1.5213000           5.42\n81          37.05         3.49     40.546   28.0     1.4480714          13.33\n82          37.08        33.75     70.833   52.0     1.3621731          13.53\n83          29.14        49.17     78.308   60.0     1.3051333          14.95\n84          29.20        22.00     51.200   40.0     1.2800000          11.40\n85          24.05         7.50     31.546   25.0     1.2618400           8.53\n86          18.30        18.80     37.102   30.0     1.2367333           7.71\n87          33.04        12.70     45.735   40.0     1.1433750          12.22\n88          26.69         6.46     33.152   30.0     1.1050667           7.86\n89         116.60       103.25    219.851  200.0     1.0992550          53.17\n90          36.39        53.40     89.792   82.0     1.0950244          19.06\n91          19.49         7.63     27.121   25.0     1.0848400           8.68\n92         100.24        74.58    174.821  163.0     1.0725215          36.43\n93          68.91        15.00     83.911   79.0     1.0621646          25.00\n94          48.50        21.20     69.700   70.0     0.9957143          17.80\n95          13.66         9.40     23.057   25.0     0.9222800           5.24\n96           5.31         2.95      8.258   10.0     0.8258000           1.75\n97          57.31        49.20    106.507  135.0     0.7889407          21.24\n98          21.30        17.20     38.502   50.0     0.7700400           8.13\n99          25.12        27.84     52.961   70.0     0.7565857           9.35\n100         16.93        10.50     27.428   38.0     0.7217895           8.49\n101         10.72        18.21     28.931   45.0     0.6429111           5.19\n102         33.70        57.50     91.203  150.0     0.6080200          12.07\n103         11.54         2.67     14.211   25.0     0.5684400           3.51\n104         21.30        27.50     48.795   90.0     0.5421667          10.02\n105         21.60         3.26     24.856   49.9     0.4981162           9.36\n106         13.07         8.48     21.552   45.0     0.4789333           5.14\n107          4.46         9.73     14.190   30.0     0.4730000           1.02\n108          4.40         0.40      4.800   15.0     0.3200000           0.64\n109          0.97         5.40      6.370   21.0     0.3033333           0.11\n110         21.39        17.60     38.992  150.0     0.2599467           6.91\n111          7.17         0.24      7.410   41.0     0.1807317           3.25\n\n\n\nmovies %&gt;%\n  gf_point(DomesticGross ~ WorldGross) %&gt;%\n  gf_lm() %&gt;%\n  gf_labs(\n    title = \"Scatter Plot\",\n    subtitle = \"Movie Gross Earnings: Domestics vs World\"\n   )\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_lm()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\nWarning: Using the `size` aesthetic with geom_line was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead.\n\n\n\n\n\n\n\n\n\n\nmovies %&gt;%\n  gf_point(Profitability ~ Budget) %&gt;%\n  gf_lm() %&gt;%\n  gf_labs(\n    title = \"Scatter Plot\",\n    subtitle = \"Movie Gross Earnings: profitiability vs Budget\"\n   )\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_lm()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nmovies %&gt;%\n  gf_point(Profitability ~ AudienceScore) %&gt;%\n  gf_lm() %&gt;%\n  gf_labs(\n    title = \"Scatter Plot\",\n    \n   )\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_lm()`).\n\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n# names(movies_quant)\n\nGGally::ggpairs(\n  movies %&gt;% drop_na(),\n  # Select Quant variables only for now\n  columns = c(\n    \"RottenTomatoes\", \"AudienceScore\", \"DomesticGross\", \"ForeignGross\", \"Budget\"\n  ),\n  switch = \"both\",\n  # axis labels in more traditional locations(left and bottom)\n\n  progress = FALSE,\n  # no compute progress messages needed\n\n  # Choose the diagonal graphs (always single variable! Think!)\n  diag = list(continuous = \"barDiag\"),\n  # choosing histogram,not density\n\n  # Choose lower triangle graphs, two-variable graphs\n  lower = list(continuous = wrap(\"smooth\", alpha = 0.3, se = FALSE)),\n  title = \"Movies Data Correlations Plot #1\"\n)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\nmovies %&gt;%\n  gf_point(Profitability ~ AudienceScore) %&gt;%\n  gf_lm() %&gt;%\n  gf_labs(\n    title = \"Scatter Plot\"\n    \n   )\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_lm()`).\n\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "posts/A2-Grain Transportation Cartels/index.html#desc",
    "href": "posts/A2-Grain Transportation Cartels/index.html#desc",
    "title": "Dataset-1",
    "section": "Desc",
    "text": "Desc"
  },
  {
    "objectID": "posts/A2-Grain Transportation Cartels/index.html#weekly-time-series-data-on-joint-executive-committees-railroad-cartel-from-1800-to-1886",
    "href": "posts/A2-Grain Transportation Cartels/index.html#weekly-time-series-data-on-joint-executive-committees-railroad-cartel-from-1800-to-1886",
    "title": "A-2 Dataset-1",
    "section": "Weekly time series data on joint executive committee’s railroad cartel from 1800 to 1886 ",
    "text": "Weekly time series data on joint executive committee’s railroad cartel from 1800 to 1886 \nPorter, Robert H. “A Study of Cartel Stability: The Joint Executive Committee, 1880-1886.” The Bell Journal of Economics 14, no. 2 (1983): 301–14. https://doi.org/10.2307/3003634.\n-The study analyses how the cartel’s pricing strategy evolved over time \n-Oligopoly- market structure with a small number of firms, none of which can keep the others from having significant influence.\n-Testing whether fluctuations in the grains’ prices and quantities were due to the change in the cartel’s cooperation level or simply external factors like shifts in demand and cost conditions.\n-Cartels tend to oscillate between these two modes of behaviour? Did they do that in This case?\n-Behaviours\n\nCollusive\n\nFirms work together to maximise their joint profits; involves agreements to set prices, limit production, market sharing etc, may artificially restrict supply to raise prices.\n\nNoncooperative\n\nFirms act independently and compete with each other to focus on their individual prices.\nMay lead to price wars, increased production.\n\n\n-A cartel is a group of independent market participants who collude with each other as well as agreeing not to compete with each other in order to improve their profits and dominate the market. —wikipedia description of cartels\n\n-trigger price strategy\n-firms set a specific price point (Trigger price),that, if undercut by a competitor to gain market share, will prompt a reaction from other firms in the market.\n-the reaction aims to restore the competitive equilibrium.\n-goal is to discourage firms from lowering prices as It might lead to price wars.\n-mechanism to sustain higher prices in oligopolistic markets.\n\n\nJEC CASE STUDY features\n\nseveral instances where the cartel thought cheating had occurred, cut prices for a time and then returned to the collusive price\nprice, rather than quantity was used as the strategic variable of firms (cartels) in the rail-freight industry\nwheat transported was subsequently exported overseas and the pricing was adjusted to compensated for variations in ocean shipping rates.\nlake steamers and sailships were the principal source of competition for the railroads\npredictable fluctuations in demand caused by the annual opening and closing of the Great Lakes shipping season did not disrupt industry behaviour. Rates were systematically adjusted in line with the lake navigation schedule\nconduct of JEC was largely following a collusive equilibrium as price wars were caused by unpredictable disturbances rather than by predictable fluctuations in demand.\n\n\n\nExamining the Data\n\n\n\ncartelstability &lt;- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/AER/CartelStability.csv\")\n\nRows: 328 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): cartel, season, ice\ndbl (3): rownames, price, quantity\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncartelstability\n\n# A tibble: 328 × 6\n   rownames price cartel quantity season          ice  \n      &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;\n 1        1  0.4  yes       13632 Jan  1 - Jan 28 yes  \n 2        2  0.4  yes       20035 Jan  1 - Jan 28 yes  \n 3        3  0.4  yes       16319 Jan  1 - Jan 28 yes  \n 4        4  0.4  yes       12603 Jan  1 - Jan 28 yes  \n 5        5  0.4  yes       23079 Jan 29 - Feb 25 yes  \n 6        6  0.4  yes       19652 Jan 29 - Feb 25 yes  \n 7        7  0.4  yes       16211 Jan 29 - Feb 25 yes  \n 8        8  0.4  yes       22914 Jan 29 - Feb 25 yes  \n 9        9  0.4  yes       23710 Feb 26 - Mar 26 yes  \n10       10  0.35 yes       23036 Feb 26 - Mar 26 yes  \n# ℹ 318 more rows\n\n\n\nglimpse(cartelstability)\n## Rows: 328\n## Columns: 6\n## $ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n## $ price    &lt;dbl&gt; 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.35, 0…\n## $ cartel   &lt;chr&gt; \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"…\n## $ quantity &lt;dbl&gt; 13632, 20035, 16319, 12603, 23079, 19652, 16211, 22914, 23710…\n## $ season   &lt;chr&gt; \"Jan  1 - Jan 28\", \"Jan  1 - Jan 28\", \"Jan  1 - Jan 28\", \"Jan…\n## $ ice      &lt;chr&gt; \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\"…\n\n\ninspect(cartelstability)\n\n\ncategorical variables:  \n    name     class levels   n missing\n1 cartel character      2 328       0\n2 season character     13 328       0\n3    ice character      2 328       0\n                                   distribution\n1 yes (61.9%), no (38.1%)                      \n2 Feb 26 - Mar 26 (8.5%) ...                   \n3 no (57.3%), yes (42.7%)                      \n\nquantitative variables:  \n      name   class      min       Q1   median       Q3     max         mean\n1 rownames numeric    1.000    82.75   164.50   246.25   328.0 1.645000e+02\n2    price numeric    0.125     0.20     0.25     0.30     0.4 2.464939e-01\n3 quantity numeric 4810.000 16604.00 23100.50 32389.00 76407.0 2.538439e+04\n            sd   n missing\n1 9.482967e+01 328       0\n2 6.652626e-02 328       0\n3 1.163277e+04 328       0\n\n\n\n\nData Munging & Creating Data Dictionary\n\n\n\ncartelstability_modified &lt;- cartelstability %&gt;%\n  mutate(\n    cartel = case_when(\n      cartel == \"yes\" ~ \"Cartel operational\",\n      cartel == \"no\" ~ \"Cartel not operational\",\n      TRUE ~ \"Unknown\"  \n    ) %&gt;% as.factor(), \n    season = as.factor(season),\n    ice = case_when(\n         ice==\"yes\"~ \"lakes frozen\",\n         ice==\"no\" ~ \"lakes normal\",\n         TRUE ~ \"Unknown\") %&gt;% as.factor()\n  )\n\nglimpse(cartelstability_modified)\n\nRows: 328\nColumns: 6\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ price    &lt;dbl&gt; 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.35, 0…\n$ cartel   &lt;fct&gt; Cartel operational, Cartel operational, Cartel operational, C…\n$ quantity &lt;dbl&gt; 13632, 20035, 16319, 12603, 23079, 19652, 16211, 22914, 23710…\n$ season   &lt;fct&gt; Jan  1 - Jan 28, Jan  1 - Jan 28, Jan  1 - Jan 28, Jan  1 - J…\n$ ice      &lt;fct&gt; lakes frozen, lakes frozen, lakes frozen, lakes frozen, lakes…\n\n\n\nQual variables- Cartel, Season, Ice\n\n\nQuant variables- Price, Quantity\n\n\nwe refer back to the time interval mentioned in our description “weekly time series” to appropriately define our variables\n\n\n-to analyse price trends on a weekly basis, a price index seems to have been used to better analyse the market trends.\n\n\n\n\n\n\n\n\n\n\nVariables\nData_types\nDesc\n\n\n\n\nPrice\nFloat\nPrice index for shipping grains (on a weekly basis)\n\n\nCartel\nFactor\nCartel involvement\n\n\nQuantity\nFloat\nQuantity of grains (in tonnes)\n\n\nSeason\nFactor\ntime period\n\n\nIce\nFactor\npresence of ice in the great lakes\n\n\n\n\n\n\n\nUnderstanding the data some more\n\n\ncartelstability_modified %&gt;%\n  select(season, cartel) %&gt;%\n  head(50)\n\n# A tibble: 50 × 2\n   season          cartel            \n   &lt;fct&gt;           &lt;fct&gt;             \n 1 Jan  1 - Jan 28 Cartel operational\n 2 Jan  1 - Jan 28 Cartel operational\n 3 Jan  1 - Jan 28 Cartel operational\n 4 Jan  1 - Jan 28 Cartel operational\n 5 Jan 29 - Feb 25 Cartel operational\n 6 Jan 29 - Feb 25 Cartel operational\n 7 Jan 29 - Feb 25 Cartel operational\n 8 Jan 29 - Feb 25 Cartel operational\n 9 Feb 26 - Mar 26 Cartel operational\n10 Feb 26 - Mar 26 Cartel operational\n# ℹ 40 more rows\n\n\n\n\n\ncolnames(cartelstability)\n\n[1] \"rownames\" \"price\"    \"cartel\"   \"quantity\" \"season\"   \"ice\"     \n\n\n\ncartel_summary &lt;- cartelstability_modified %&gt;%\n  group_by(season, cartel, ice) %&gt;%\n  summarize(avg_price = mean(price, na.rm = TRUE), .groups = 'drop')  \n\nglimpse(cartelstability_modified)\n\nRows: 328\nColumns: 6\n$ rownames &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ price    &lt;dbl&gt; 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.40, 0.35, 0…\n$ cartel   &lt;fct&gt; Cartel operational, Cartel operational, Cartel operational, C…\n$ quantity &lt;dbl&gt; 13632, 20035, 16319, 12603, 23079, 19652, 16211, 22914, 23710…\n$ season   &lt;fct&gt; Jan  1 - Jan 28, Jan  1 - Jan 28, Jan  1 - Jan 28, Jan  1 - J…\n$ ice      &lt;fct&gt; lakes frozen, lakes frozen, lakes frozen, lakes frozen, lakes…\n\n\n\ncartel_summary &lt;- cartelstability_modified %&gt;%\n  group_by(season, cartel, ice) %&gt;%\n  summarize(avg_price_index = mean(price), .groups = 'drop')\n\nglimpse(cartel_summary)\n\nRows: 30\nColumns: 4\n$ season          &lt;fct&gt; Apr 24 - May 21, Apr 24 - May 21, Apr 24 - May 21, Apr…\n$ cartel          &lt;fct&gt; Cartel not operational, Cartel not operational, Cartel…\n$ ice             &lt;fct&gt; lakes frozen, lakes normal, lakes frozen, lakes normal…\n$ avg_price_index &lt;dbl&gt; 0.1857143, 0.2000000, 0.3000000, 0.2700000, 0.1846154,…\n\n\n\nkable(cartel_summary, \n      caption = \"Summary of Cartel Data by Season, Cartel, and Ice Status\") %&gt;%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), full_width = F)\n\n\nSummary of Cartel Data by Season, Cartel, and Ice Status\n\n\nseason\ncartel\nice\navg_price_index\n\n\n\n\nApr 24 - May 21\nCartel not operational\nlakes frozen\n0.1857143\n\n\nApr 24 - May 21\nCartel not operational\nlakes normal\n0.2000000\n\n\nApr 24 - May 21\nCartel operational\nlakes frozen\n0.3000000\n\n\nApr 24 - May 21\nCartel operational\nlakes normal\n0.2700000\n\n\nAug 14 - Sep 10\nCartel not operational\nlakes normal\n0.1846154\n\n\nAug 14 - Sep 10\nCartel operational\nlakes normal\n0.2681818\n\n\nDec 4 - Dec 31\nCartel not operational\nlakes frozen\n0.1812500\n\n\nDec 4 - Dec 31\nCartel operational\nlakes frozen\n0.2861111\n\n\nDec 4 - Dec 31\nCartel operational\nlakes normal\n0.2250000\n\n\nFeb 26 - Mar 26\nCartel not operational\nlakes frozen\n0.2875000\n\n\nFeb 26 - Mar 26\nCartel operational\nlakes frozen\n0.2875000\n\n\nJan 1 - Jan 28\nCartel not operational\nlakes frozen\n0.1750000\n\n\nJan 1 - Jan 28\nCartel operational\nlakes frozen\n0.3100000\n\n\nJan 29 - Feb 25\nCartel not operational\nlakes frozen\n0.2625000\n\n\nJan 29 - Feb 25\nCartel operational\nlakes frozen\n0.3000000\n\n\nJul 17 - Aug 13\nCartel not operational\nlakes normal\n0.1800000\n\n\nJul 17 - Aug 13\nCartel operational\nlakes normal\n0.2571429\n\n\nJun 19 - Jul 16\nCartel not operational\nlakes normal\n0.1777778\n\n\nJun 19 - Jul 16\nCartel operational\nlakes normal\n0.2500000\n\n\nMar 27 - Apr 23\nCartel not operational\nlakes frozen\n0.2333333\n\n\nMar 27 - Apr 23\nCartel operational\nlakes frozen\n0.2791667\n\n\nMar 27 - Apr 23\nCartel operational\nlakes normal\n0.3000000\n\n\nMay 22 - Jun 18\nCartel not operational\nlakes normal\n0.1666667\n\n\nMay 22 - Jun 18\nCartel operational\nlakes normal\n0.2733333\n\n\nNov 6 - Dec 3\nCartel not operational\nlakes normal\n0.1968750\n\n\nNov 6 - Dec 3\nCartel operational\nlakes normal\n0.2625000\n\n\nOct 9 - Nov 5\nCartel not operational\nlakes normal\n0.1562500\n\n\nOct 9 - Nov 5\nCartel operational\nlakes normal\n0.2562500\n\n\nSep 11 - Oct 8\nCartel not operational\nlakes normal\n0.1538462\n\n\nSep 11 - Oct 8\nCartel operational\nlakes normal\n0.2636364\n\n\n\n\n\n\n\nnot ordered\n\n\n\nResearch questions\n\n\n\n\nopening and closing of the lakes was a predictable fluctuation in demand, when the cartels were operating what behaviour did they adopt?\nwhen the cartels were not operative what was the market trend like, did it trigger price wars?\nunder which conditions (lakes frozen or not), did the cartels benefit the most?\n\n\n\nPlotting graphs\n\n\nggplot(data=cartel_summary, aes(x = season, y = avg_price_index, color = cartel, group = cartel)) +\n  geom_line(size = 1) +\n  geom_point(size = 3) +\n  labs(\n    title = \"Price Index per ton of grain transported\",\n    x = \"Season\",\n    y = \"Avg Price Index\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5, size = 14),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"bottom\"\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n\nfacet the plot by lakes frozen not frozen\n\nggplot(data = cartel_summary, aes(x = season, y = avg_price_index, color = cartel, group = cartel)) +\n  geom_line(size = 1) + \n  geom_point(size = 3) + \n  labs(\n    title = \"Price Index per ton of grain transported\",\n    x = \"Season\",\n    y = \"Avg Price Index\"\n  ) +\n  facet_wrap(~ ice, ncol = 2, labeller = labeller(ice = c(\"frozen\" = \"lakes frozen\", \"not frozen\" = \"lakes normal\"))) +\n  theme_minimal(base_size = 14) + \n  theme(\n    plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5, size = 14),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"bottom\"\n  )"
  },
  {
    "objectID": "posts/A2-Grain Transportation Cartels/index.html#inferences",
    "href": "posts/A2-Grain Transportation Cartels/index.html#inferences",
    "title": "A-2 Dataset-1",
    "section": "Inferences",
    "text": "Inferences\n\nWhen lakes are frozen, and cartels are operative, the price index is higher than when the cartels are not operating. Lakes being frozen reduces competition for the railways. cartels can enter collusive agreements and gain market power.\nwhen lakes are not frozen, and cartels are operational, the price index fluctuates yet is still high, showing how external competition (shipping), increases competition among cartels, they might follow noncooperative behaviour and trigger price may get undercut in the process."
  },
  {
    "objectID": "posts/A2-Valentine's day spending/index.html",
    "href": "posts/A2-Valentine's day spending/index.html",
    "title": "Dataset-2",
    "section": "",
    "text": "Examining the Data\n\n\n\ngifts_age &lt;- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-02-13/gifts_age.csv\")\n\nRows: 6 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Age\ndbl (8): SpendingCelebrating, Candy, Flowers, Jewelry, GreetingCards, Evenin...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(gifts_age)\n\nRows: 6\nColumns: 9\n$ Age                 &lt;chr&gt; \"18-24\", \"25-34\", \"35-44\", \"45-54\", \"55-64\", \"65+\"\n$ SpendingCelebrating &lt;dbl&gt; 51, 40, 31, 19, 18, 13\n$ Candy               &lt;dbl&gt; 70, 62, 58, 60, 50, 42\n$ Flowers             &lt;dbl&gt; 50, 44, 41, 37, 32, 25\n$ Jewelry             &lt;dbl&gt; 33, 34, 29, 20, 13, 8\n$ GreetingCards       &lt;dbl&gt; 33, 33, 42, 42, 43, 44\n$ EveningOut          &lt;dbl&gt; 41, 37, 30, 31, 29, 24\n$ Clothing            &lt;dbl&gt; 33, 27, 26, 20, 19, 12\n$ GiftCards           &lt;dbl&gt; 23, 19, 22, 23, 20, 20\n\n\n\ninspect(gifts_age)\n\n\ncategorical variables:  \n  name     class levels n missing                                  distribution\n1  Age character      6 6       0 18-24 (16.7%), 25-34 (16.7%) ...             \n\nquantitative variables:  \n                 name   class min    Q1 median    Q3 max     mean        sd n\n1 SpendingCelebrating numeric  13 18.25   25.0 37.75  51 28.66667 14.733183 6\n2               Candy numeric  42 52.00   59.0 61.50  70 57.00000  9.777525 6\n3             Flowers numeric  25 33.25   39.0 43.25  50 38.16667  8.886319 6\n4             Jewelry numeric   8 14.75   24.5 32.00  34 22.83333 10.870449 6\n5       GreetingCards numeric  33 35.25   42.0 42.75  44 39.50000  5.089204 6\n6          EveningOut numeric  24 29.25   30.5 35.50  41 32.00000  6.066300 6\n7            Clothing numeric  12 19.25   23.0 26.75  33 22.83333  7.359801 6\n8           GiftCards numeric  19 20.00   21.0 22.75  23 21.16667  1.722401 6\n  missing\n1       0\n2       0\n3       0\n4       0\n5       0\n6       0\n7       0\n8       0\n\n\n\n\nData Munging & Creating Data Dictionary\n\n\n\ngiftsage_modified &lt;- gifts_age %&gt;%\n   mutate(Age = as.factor(Age))\ngiftsage_modified\n\n# A tibble: 6 × 9\n  Age   SpendingCelebrating Candy Flowers Jewelry GreetingCards EveningOut\n  &lt;fct&gt;               &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;\n1 18-24                  51    70      50      33            33         41\n2 25-34                  40    62      44      34            33         37\n3 35-44                  31    58      41      29            42         30\n4 45-54                  19    60      37      20            42         31\n5 55-64                  18    50      32      13            43         29\n6 65+                    13    42      25       8            44         24\n# ℹ 2 more variables: Clothing &lt;dbl&gt;, GiftCards &lt;dbl&gt;\n\n\n\n\n\n\n\nVariables\nData_types\nDesc\n\n\n\n\nAge\nFactor-qual\nAge group\n\n\nSpendingCelebrating\nFloat-quant\nAverage spending on celebrations\n\n\nCandy\nFloat-quant\nAverage spending on candy\n\n\nFlowers\nFloat-quant\nAverage spending on flowers\n\n\nJewelry\nFloat-quant\nAverage spending on jewelry\n\n\nGreetingCards\nFloat-quant\nAverage spending on greeting cards\n\n\nEveningOut\nFloat-quant\nAverage spending on evening outings\n\n\nClothing\nFloat-quant\nAverage spending on clothing\n\n\nGiftCards\nFloat-quant\nAverage spending on gift cards\n\n\n\n\n\n\n\nResearch Questions\n\n\nDependent variable- spending\nIndependent variable - age\n-Relation between age and gift categories\n-what are the valentine’s day spending trends across different age groups\nWhat research activity might have been carried out to obtain the data graphed here?\n\nsurveys\nreports on consumer spending\n\n\n\nplotting graph\n\n\n\ndata_long &lt;-gifts_age %&gt;%\n  pivot_longer(cols = -Age, names_to = \"Category\", values_to = \"AmountSpent\") \n\nggplot(data_long, aes(x = Age, y = AmountSpent, color = Category, group = Category)) +\n  geom_line(size = 1) +  \n  geom_point(size = 2) +  \n  labs(title = \"Spending by Age Group\",\n       x = \"Age Group\",\n       y = \"Amount Spent\",\n       color = \"Spending Category\") +\n  theme_minimal() +  \n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n\n\ncolnames(giftsage_modified)\n\n[1] \"Age\"                 \"SpendingCelebrating\" \"Candy\"              \n[4] \"Flowers\"             \"Jewelry\"             \"GreetingCards\"      \n[7] \"EveningOut\"          \"Clothing\"            \"GiftCards\"          \n\n\n\ncolnames(gifts_age)\n\n[1] \"Age\"                 \"SpendingCelebrating\" \"Candy\"              \n[4] \"Flowers\"             \"Jewelry\"             \"GreetingCards\"      \n[7] \"EveningOut\"          \"Clothing\"            \"GiftCards\"          \n\n\n\n\n\n-Did not expect spending on jewellery to be high among the younger age brackets.\n- had a preconceived notion that the 65+ age group would have considerable amounts of spending in the jewellery and flowers categories\n-did not expect candy to be plotted so high up either especially for the older age groups."
  },
  {
    "objectID": "posts/A2-Valentine's day spending/index.html#observationssurprises",
    "href": "posts/A2-Valentine's day spending/index.html#observationssurprises",
    "title": "Dataset-2",
    "section": "",
    "text": "-Did not expect spending on jewellery to be high among the younger age brackets.\n- had a preconceived notion that the 65+ age group would have considerable amounts of spending in the jewellery and flowers categories\n-did not expect candy to be plotted so high up either especially for the older age groups."
  },
  {
    "objectID": "posts/A2-Movie Profits/index.html",
    "href": "posts/A2-Movie Profits/index.html",
    "title": "Dataset-3",
    "section": "",
    "text": "Movie Profits\n\n\nReading & Examining the Data\n\n\n\nmovieprofit &lt;- read_delim(\"../../data/movie_profit.csv\")\n\nRows: 3310 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr  (4): movie, distributor, mpaa_rating, genre\ndbl  (4): production_budget, domestic_gross, worldwide_gross, decade\nnum  (1): profit_ratio\ndate (1): release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nprint(head(movieprofit))\n\n# A tibble: 6 × 10\n  release_date movie            production_budget domestic_gross worldwide_gross\n  &lt;date&gt;       &lt;chr&gt;                        &lt;dbl&gt;          &lt;dbl&gt;           &lt;dbl&gt;\n1 2005-07-22   November                    250000         191862          191862\n2 1998-08-28   I Married a Str…            250000         203134          203134\n3 1997-03-28   Love and Other …            250000         212285          743216\n4 2000-07-14   Chuck&Buck                  250000        1055671         1157672\n5 2011-10-28   Like Crazy                  250000        3395391         3728400\n6 2003-04-11   Better Luck Tom…            250000        3802390         3809226\n# ℹ 5 more variables: distributor &lt;chr&gt;, mpaa_rating &lt;chr&gt;, genre &lt;chr&gt;,\n#   profit_ratio &lt;dbl&gt;, decade &lt;dbl&gt;\n\n\n\nglimpse(movieprofit)\n\nRows: 3,310\nColumns: 10\n$ release_date      &lt;date&gt; 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             &lt;chr&gt; \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget &lt;dbl&gt; 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    &lt;dbl&gt; 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   &lt;dbl&gt; 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       &lt;chr&gt; \"Other\", \"Other\", \"Other\", \"Other\", \"Paramount Pictu…\n$ mpaa_rating       &lt;chr&gt; \"R\", NA, \"R\", \"R\", \"PG-13\", \"R\", \"R\", \"R\", \"R\", \"R\",…\n$ genre             &lt;chr&gt; \"Drama\", \"Comedy\", \"Comedy\", \"Drama\", \"Drama\", \"Dram…\n$ profit_ratio      &lt;dbl&gt; 7.674480e+13, 8.125360e+13, 2.972864e+14, 4.630688e+…\n$ decade            &lt;dbl&gt; 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n\n\n\ninspect(movieprofit)\n\n\ncategorical variables:  \n         name     class levels    n missing\n1       movie character   3310 3310       0\n2 distributor character      6 3268      42\n3 mpaa_rating character      4 3180     130\n4       genre character      5 3310       0\n                                   distribution\n1 10 Days in a Madhouse (0%) ...               \n2  Other (53.2%), Warner Bros. (11%) ...       \n3 R (46.4%), PG-13 (33.5%), PG (17.4%) ...     \n4 Drama (36.5%), Comedy (24.1%) ...            \n\nDate variables:  \n          name class      first       last min_diff  max_diff    n missing\n1 release_date  Date 1936-02-05 2017-12-22   0 days 2592 days 3310       0\n\nquantitative variables:  \n               name   class      min           Q1       median           Q3\n1 production_budget numeric 2.50e+05 9.500000e+06 2.000000e+07 4.500000e+07\n2    domestic_gross numeric 0.00e+00 6.530094e+06 2.558731e+07 6.046695e+07\n3   worldwide_gross numeric 4.23e+02 1.086144e+07 4.040902e+07 1.184703e+08\n4      profit_ratio numeric 1.38e+10 7.861269e+13 1.962499e+14 3.942158e+14\n5            decade numeric 1.93e+03 1.990000e+03 2.000000e+03 2.010000e+03\n           max         mean           sd    n missing\n1 1.750000e+08 3.326794e+07 3.460741e+07 3310       0\n2 4.745447e+08 4.551509e+07 5.852794e+07 3310       0\n3 1.162782e+09 9.384123e+07 1.389514e+08 3310       0\n4 4.315179e+16 4.319388e+14 1.501736e+15 3310       0\n5 2.010000e+03 1.998785e+03 1.061308e+01 3310       0\n\n\n\nskim(movieprofit)\n\n\nData summary\n\n\nName\nmovieprofit\n\n\nNumber of rows\n3310\n\n\nNumber of columns\n10\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nDate\n1\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmovie\n0\n1.00\n1\n35\n0\n3310\n0\n\n\ndistributor\n42\n0.99\n5\n18\n0\n6\n0\n\n\nmpaa_rating\n130\n0.96\n1\n5\n0\n4\n0\n\n\ngenre\n0\n1.00\n5\n9\n0\n5\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nrelease_date\n0\n1\n1936-02-05\n2017-12-22\n2005-06-30\n1723\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nproduction_budget\n0\n1\n3.326794e+07\n3.460741e+07\n2.50e+05\n9.500000e+06\n2.000000e+07\n4.500000e+07\n1.750000e+08\n▇▂▁▁▁\n\n\ndomestic_gross\n0\n1\n4.551509e+07\n5.852794e+07\n0.00e+00\n6.530094e+06\n2.558731e+07\n6.046695e+07\n4.745447e+08\n▇▁▁▁▁\n\n\nworldwide_gross\n0\n1\n9.384123e+07\n1.389514e+08\n4.23e+02\n1.086144e+07\n4.040902e+07\n1.184703e+08\n1.162782e+09\n▇▁▁▁▁\n\n\nprofit_ratio\n0\n1\n4.319388e+14\n1.501736e+15\n1.38e+10\n7.861269e+13\n1.962499e+14\n3.942158e+14\n4.315179e+16\n▇▁▁▁▁\n\n\ndecade\n0\n1\n1.998790e+03\n1.061000e+01\n1.93e+03\n1.990000e+03\n2.000000e+03\n2.010000e+03\n2.010000e+03\n▁▁▁▃▇\n\n\n\n\n\n\n\nData Munging and Data Dictionary\n\n\n\nmovieprofit_modified&lt;- movieprofit %&gt;%\n  mutate(\n    mpaa_rating = as.factor(mpaa_rating),\n    genre = as.factor(genre),\n    decade = as.factor(decade)\n  )\nglimpse(movieprofit_modified)\n\nRows: 3,310\nColumns: 10\n$ release_date      &lt;date&gt; 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             &lt;chr&gt; \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget &lt;dbl&gt; 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    &lt;dbl&gt; 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   &lt;dbl&gt; 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       &lt;chr&gt; \"Other\", \"Other\", \"Other\", \"Other\", \"Paramount Pictu…\n$ mpaa_rating       &lt;fct&gt; R, NA, R, R, PG-13, R, R, R, R, R, R, R, PG-13, NA, …\n$ genre             &lt;fct&gt; Drama, Comedy, Comedy, Drama, Drama, Drama, Action, …\n$ profit_ratio      &lt;dbl&gt; 7.674480e+13, 8.125360e+13, 2.972864e+14, 4.630688e+…\n$ decade            &lt;fct&gt; 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n\n\n\ndata_dictionary &lt;- data.frame(\n  Variable = c(\"release_date\", \"movie\", \"production_budget\", \"domestic_gross\",\n               \"worldwide_gross\", \"distributor\", \"mpaa_rating\", \"genre\", \n               \"profit_ratio\", \"decade\"),\n  Data_Type = c(\"Date\", \"Character\", \"Numeric\", \"Numeric\",\n                \"Numeric\", \"Character\", \"Factor\", \"Factor\", \n                \"Numeric\", \"Factor\"),\n  Description = c(\"The release date of the movie\", \"Title of the movie\", \n                  \"Budget allocated for the movie\", \"Gross revenue earned domestically\", \n                  \"Total gross revenue worldwide\", \"Company distributing the movie\", \n                  \"Rating assigned by the MPAA\", \"Genre of the movie\", \n                  \"Ratio of profit to production budget\", \"decade in which the movie was released\")\n)\n\n\nkable(data_dictionary)\n\n\n\n\nVariable\nData_Type\nDescription\n\n\n\n\nrelease_date\nDate\nThe release date of the movie\n\n\nmovie\nCharacter\nTitle of the movie\n\n\nproduction_budget\nNumeric\nBudget allocated for the movie\n\n\ndomestic_gross\nNumeric\nGross revenue earned domestically\n\n\nworldwide_gross\nNumeric\nTotal gross revenue worldwide\n\n\ndistributor\nCharacter\nCompany distributing the movie\n\n\nmpaa_rating\nFactor\nRating assigned by the MPAA\n\n\ngenre\nFactor\nGenre of the movie\n\n\nprofit_ratio\nNumeric\nRatio of profit to production budget\n\n\ndecade\nFactor\ndecade in which the movie was released\n\n\n\n\n\n\nQualitative Variables: movie, distributor, mpaa_rating, genre, decade\nQuantitative Variables: production_budget, domestic_gross, worldwide_gross, profit_ratio\nTemporal Variable: release_date\n\n\n\nPlotting graphs\n\n\n\ngf_bar(genre ~ profit_ratio | distributor, data = movieprofit_modified) \n\nWarning: Ignoring unknown aesthetics: .\n\n\nWarning: The following aesthetics were dropped during statistical transformation: ..\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: ..\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: ..\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: ..\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: ..\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: ..\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: ..\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\n\n\n\nglimpse(movieprofit_modified)\n\nRows: 3,310\nColumns: 10\n$ release_date      &lt;date&gt; 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             &lt;chr&gt; \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget &lt;dbl&gt; 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    &lt;dbl&gt; 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   &lt;dbl&gt; 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       &lt;chr&gt; \"Other\", \"Other\", \"Other\", \"Other\", \"Paramount Pictu…\n$ mpaa_rating       &lt;fct&gt; R, NA, R, R, PG-13, R, R, R, R, R, R, R, PG-13, NA, …\n$ genre             &lt;fct&gt; Drama, Comedy, Comedy, Drama, Drama, Drama, Action, …\n$ profit_ratio      &lt;dbl&gt; 7.674480e+13, 8.125360e+13, 2.972864e+14, 4.630688e+…\n$ decade            &lt;fct&gt; 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n\n\n\nmedian_profit_data &lt;- movieprofit_modified %&gt;%\n  group_by(genre, distributor) %&gt;%\n  summarize(median_profit_ratio = median(profit_ratio), .groups = \"drop\")  \n\n\nggplot(median_profit_data, aes(x = median_profit_ratio, y = genre)) +\n  geom_col() +  \n  facet_wrap(~ distributor) + \n  labs(\n    title = \"ratio of profits to genre\",\n    x = \"Median Profit Ratio\",\n    y = \"Genre\"\n  ) \n\n\n\n\n\n\n\n\n\nhorizontal bar plots\ngenre and median of profit ratio are the two variables being plotted\naction and horror\nfacet_wrap(~ distributor) to get separate plots for each distributor\nwould have hate to mutate and calculate profit ratio"
  },
  {
    "objectID": "posts/A3-1/index.html",
    "href": "posts/A3-1/index.html",
    "title": "A-3 tips",
    "section": "",
    "text": "tip &lt;-read.csv(\"../../data/tip.csv\")\nprint(head(tip))\n\n      Name Gender Food.preferance Tip\n1    Aanya Female             Veg   0\n2     Adit   Male             Veg   0\n3    Aditi Female             Veg  20\n4    Akash   Male         Non-veg   0\n5  Akshita Female         Non-veg   0\n6 Anandita Female         Non-veg   0"
  },
  {
    "objectID": "posts/class 7-8/index.html",
    "href": "posts/class 7-8/index.html",
    "title": "anova",
    "section": "",
    "text": "library(tidyverse) # Tidy data processing\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggformula) # Formula based plots\n\nLoading required package: scales\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nLoading required package: ggridges\n\nNew to ggformula?  Try the tutorials: \n    learnr::run_tutorial(\"introduction\", package = \"ggformula\")\n    learnr::run_tutorial(\"refining\", package = \"ggformula\")\n\nlibrary(mosaic) # Data inspection and Statistical Inference\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following object is masked from 'package:scales':\n\n    rescale\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nlibrary(broom) # Tidy outputs from Statistical Analyses\nlibrary(infer) # Statistical Inference, Permutation/Bootstrap\n\n\nAttaching package: 'infer'\n\nThe following objects are masked from 'package:mosaic':\n\n    prop_test, t_test\n\nlibrary(patchwork) # Arranging Plots\nlibrary(ggprism) # Interesting Categorical Axes\nlibrary(supernova) # Beginner-Friendly ANOVA Tablesin\n\n\nAttaching package: 'supernova'\n\nThe following object is masked from 'package:scales':\n\n    number\n\n\n\nfrogs_orig &lt;- read_csv(\"../../data/frogs.csv\")\n\nRows: 60 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (4): Frogspawn sample id, Temperature13, Temperature18, Temperature25\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nfrogs_orig\n\n# A tibble: 60 × 4\n   `Frogspawn sample id` Temperature13 Temperature18 Temperature25\n                   &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n 1                     1            24            NA            NA\n 2                     2            NA            21            NA\n 3                     3            NA            NA            18\n 4                     4            26            NA            NA\n 5                     5            NA            22            NA\n 6                     6            NA            NA            14\n 7                     7            27            NA            NA\n 8                     8            NA            22            NA\n 9                     9            NA            NA            15\n10                    10            27            NA            NA\n# ℹ 50 more rows\n\n\n\ninspect(frogs_orig)\n\n\nquantitative variables:  \n                 name   class min    Q1 median    Q3 max mean        sd  n\n1 Frogspawn sample id numeric   1 15.75   30.5 45.25  60 30.5 17.464249 60\n2       Temperature13 numeric  24 26.00   26.5 27.00  28 26.3  1.128576 20\n3       Temperature18 numeric  19 20.00   21.0 22.00  23 21.0  1.123903 20\n4       Temperature25 numeric  14 15.00   16.5 17.00  18 16.2  1.196486 20\n  missing\n1       0\n2      40\n3      40\n4      40\n\n\n\nfrogs_orig %&gt;%\n  pivot_longer(\n    .,\n    cols = starts_with(\"Temperature\"),\n    cols_vary = \"fastest\",\n    # new in pivot_longer\n    names_to = \"Temp\",\n    values_to = \"Time\"\n  ) %&gt;%\n  drop_na() %&gt;%\n  ##\n  separate_wider_regex(\n    cols = Temp,\n    # knock off the unnecessary \"Temperature\" word\n    # Just keep the digits thereafter\n    patterns = c(\"Temperature\", TempFac = \"\\\\d+\"),\n    cols_remove = TRUE\n  ) %&gt;%\n  # Convert Temp into TempFac, a 3-level factor\n  mutate(TempFac = factor(\n    x = TempFac,\n    levels = c(13, 18, 25),\n    labels = c(\"13\", \"18\", \"25\")\n  )) %&gt;%\n  rename(\"Id\" = `Frogspawn sample id`) -&gt; frogs_long\nfrogs_long\n\n# A tibble: 60 × 3\n      Id TempFac  Time\n   &lt;dbl&gt; &lt;fct&gt;   &lt;dbl&gt;\n 1     1 13         24\n 2     2 18         21\n 3     3 25         18\n 4     4 13         26\n 5     5 18         22\n 6     6 25         14\n 7     7 13         27\n 8     8 18         22\n 9     9 25         15\n10    10 13         27\n# ℹ 50 more rows\n\n##\nfrogs_long %&gt;% count(TempFac)\n\n# A tibble: 3 × 2\n  TempFac     n\n  &lt;fct&gt;   &lt;int&gt;\n1 13         20\n2 18         20\n3 25         20\n\n\n\nfrogs_orig %&gt;%\n  pivot_longer(\n    .,\n    cols = starts_with(\"Temperature\"),\n    cols_vary = \"fastest\",\n    # new in pivot_longer\n    names_to = \"Temp\",\n    values_to = \"Time\"\n  ) %&gt;%\n  drop_na() %&gt;%\n  ##\n  separate_wider_regex(\n    cols = Temp,\n    # knock off the unnecessary \"Temperature\" word\n    # Just keep the digits thereafter\n    patterns = c(\"Temperature\", TempFac = \"\\\\d+\"),\n    cols_remove = TRUE\n  ) %&gt;%\n  # Convert Temp into TempFac, a 3-level factor\n  mutate(TempFac = factor(\n    x = TempFac,\n    levels = c(13, 18, 25),\n    labels = c(\"13\", \"18\", \"25\")\n  )) %&gt;%\n  rename(\"Id\" = `Frogspawn sample id`) -&gt; frogs_long\nfrogs_long\n\n# A tibble: 60 × 3\n      Id TempFac  Time\n   &lt;dbl&gt; &lt;fct&gt;   &lt;dbl&gt;\n 1     1 13         24\n 2     2 18         21\n 3     3 25         18\n 4     4 13         26\n 5     5 18         22\n 6     6 25         14\n 7     7 13         27\n 8     8 18         22\n 9     9 25         15\n10    10 13         27\n# ℹ 50 more rows\n\n##\nfrogs_long %&gt;% count(TempFac)\n\n# A tibble: 3 × 2\n  TempFac     n\n  &lt;fct&gt;   &lt;int&gt;\n1 13         20\n2 18         20\n3 25         20\n\n\n\ngf_histogram(~Time,\n  fill = ~TempFac,\n  data = frogs_long, alpha = 0.5\n) %&gt;%\n  gf_vline(xintercept = ~ mean(Time)) %&gt;%\n  gf_labs(\n    title = \"Histograms of Hatching Time Distributions vs Temperature\",\n    x = \"Hatching Time\", y = \"Count\"\n  ) %&gt;%\n  gf_text(7 ~ (mean(Time) + 2),\n    label = \"Overall Mean\"\n  ) %&gt;%\n  gf_refine(guides(fill = guide_legend(title = \"Temperature level (°C)\")))\n\n\n\n\n\n\n\n\n\ngf_boxplot(\n  data = frogs_long,\n  Time ~ TempFac,\n  fill = ~TempFac,\n  alpha = 0.5\n) %&gt;%\n  gf_vline(xintercept = ~ mean(Time)) %&gt;%\n  gf_labs(\n    title = \"Boxplots of Hatching Time Distributions vs Temperature\",\n    x = \"Temperature\", y = \"Hatching Time\",\n    caption = \"Using ggprism\"\n  ) %&gt;%\n  gf_refine(\n    scale_x_discrete(guide = \"prism_bracket\"),\n    guides(fill = guide_legend(title = \"Temperature level (°C)\"))\n  )\n\nWarning: The S3 guide system was deprecated in ggplot2 3.5.0.\nℹ It has been replaced by a ggproto system that can be extended.\n\n\n\n\n\n\n\n\n\n\nANOVA\n\nfrogs_anova &lt;- aov(Time ~ TempFac, data = frogs_long)\nfrogs_anova\n\nCall:\n   aov(formula = Time ~ TempFac, data = frogs_long)\n\nTerms:\n                 TempFac Residuals\nSum of Squares  1020.933    75.400\nDeg. of Freedom        2        57\n\nResidual standard error: 1.150133\nEstimated effects may be unbalanced\n\n\n\n# library(supernova)\nsupernova::pairwise(frogs_anova,\n  correction = \"Bonferroni\", # Try \"Tukey\"\n  alpha = 0.05, # 95% CI calculation\n  var_equal = TRUE, # We'll see\n  plot = TRUE\n)\n\n\n\n\n\n\n\n\n\n\n\n── Pairwise t-tests with Bonferroni correction ─────────────────────────────────\n\n\nModel: Time ~ TempFac\n\n\nTempFac\n\n\nLevels: 3\n\n\nFamily-wise error-rate: 0.049\n\n\n\n  group_1 group_2    diff pooled_se       t    df   lower  upper p_adj\n  &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1 18      13       -5.300     0.257 -20.608    57  -5.861 -4.739 .0000\n2 25      13      -10.100     0.257 -39.272    57 -10.661 -9.539 .0000\n3 25      18       -4.800     0.257 -18.664    57  -5.361 -4.239 .0000\n\n\n\ndifferences in mean hatching time (pair wise)\n18-13 = -5\n25-13 = -10\n25-18 = -4"
  },
  {
    "objectID": "posts/A3-1/index.html#research-question-is-there-a-significant-difference-in-the-average-tip-amount-given-by-non-vegetarians-compared-to-vegetarians",
    "href": "posts/A3-1/index.html#research-question-is-there-a-significant-difference-in-the-average-tip-amount-given-by-non-vegetarians-compared-to-vegetarians",
    "title": "A-3 tips",
    "section": "Research Question: Is there a significant difference in the average tip amount given by non-vegetarians compared to vegetarians?",
    "text": "Research Question: Is there a significant difference in the average tip amount given by non-vegetarians compared to vegetarians?\n\n\nExamining and Summarising\n\n\n\ninspect(tip)\n\n\ncategorical variables:  \n             name     class levels  n missing\n1            Name character     58 60       0\n2          Gender character      2 60       0\n3 Food.preferance character      2 60       0\n                                   distribution\n1 Ananya (3.3%), Simran (3.3%) ...             \n2 Female (50%), Male (50%)                     \n3 Non-veg (50%), Veg (50%)                     \n\nquantitative variables:  \n  name   class min Q1 median Q3 max     mean       sd  n missing\n1  Tip integer   0  0      0 20 100 11.16667 17.83556 60       0\n\n\n\ntip %&gt;% crosstable(Tip~Food.preferance) %&gt;% as_flextable()\n\nlabelvariableFood.preferanceNon-vegVegTipMin / Max0 / 50.00 / 100.0Med [IQR]0 [0;20.0]0 [0;20.0]Mean (std)10.0 (12.9)12.3 (21.9)N (NA)30 (0)30 (0)\n\n\n\nmosaic::t_test(Tip~Food.preferance, data=tip)  %&gt;% broom::tidy()\n\n# A tibble: 1 × 10\n  estimate estimate1 estimate2 statistic p.value parameter conf.low conf.high\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;\n1    -2.33        10      12.3    -0.503   0.617      46.9    -11.7      6.99\n# ℹ 2 more variables: method &lt;chr&gt;, alternative &lt;chr&gt;\n\n\n\nmosaic::t_test(Tip~Gender, data=tip)  %&gt;% broom::tidy()\n\n# A tibble: 1 × 10\n  estimate estimate1 estimate2 statistic p.value parameter conf.low conf.high\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;\n1        2      12.2      10.2     0.431   0.668      55.8    -7.29      11.3\n# ℹ 2 more variables: method &lt;chr&gt;, alternative &lt;chr&gt;\n\n\n\n\nData Munging\n\n\n\nlibrary(dplyr)\n\n\ntip_modified &lt;- tip %&gt;%\n  mutate(Food.preferance = as.factor(Food.preferance))\n\n\nQual variables- Gender, Food_Preferance (food_preference*)\n\n\nQuant variable(s)- Tip\n\n\nPlotting Graphs\n\n\n\ntip_modified %&gt;% gf_histogram(~Tip|Food.preferance)\n\n\n\n\n\n\n\n\n\ntip_modified %&gt;%\n  gf_density(\n    ~ Tip,\n    fill = ~ Food.preferance,\n    alpha = 0.5,\n   \n  )\n\n\n\n\n\n\n\n\n\n\nObservations\n\nMost of tips are clustered around the lower end ; Right skew in both cases.\n\n\n\nTips above 50 are rare. One notable outlier in the vegetarian group.\nVegetarians have a broader distribution\n\n\n\nNon-vegetarian tips are clustered around 10-25 range, they seem to tip more in this range.\n\n\n\nChecking Assumptions"
  },
  {
    "objectID": "posts/A3-1/index.html#hypotheses",
    "href": "posts/A3-1/index.html#hypotheses",
    "title": "A-3 tips",
    "section": "Hypotheses:",
    "text": "Hypotheses:\n\nH0​: μ non-veg​=μ veg​\nHa​: μ non-veg​ ≠ μ veg​"
  },
  {
    "objectID": "posts/A3-1/index.html#check-for-normality",
    "href": "posts/A3-1/index.html#check-for-normality",
    "title": "A-3 tips",
    "section": "- Check for Normality",
    "text": "- Check for Normality\n\ntip_modified %&gt;%\n  gf_density( ~ Tip,\n              fill = ~ Food.preferance,\n              alpha = 0.5,\n              title = \"Tips given by non-vegetarians and vegetarians\") %&gt;%\n  gf_facet_grid(~ Food.preferance) %&gt;% \n  gf_fitdistr(dist = \"dnorm\") \n\n\n\n\n\n\n\n\nNon-vegetarians- Right skewed distribution Vegetarians - Also right skewed but less skewed when compared with non-vegetarians\n\nshapiro.test(tip_modified$Tip[tip_modified$Food.preferance == \"Non-veg\"])\n\n\n    Shapiro-Wilk normality test\n\ndata:  tip_modified$Tip[tip_modified$Food.preferance == \"Non-veg\"]\nW = 0.71661, p-value = 2.747e-06\n\n\np value= 0.000002747\n\nshapiro.test(tip_modified$Tip[tip_modified$Food.preferance == \"Veg\"])\n\n\n    Shapiro-Wilk normality test\n\ndata:  tip_modified$Tip[tip_modified$Food.preferance == \"Veg\"]\nW = 0.6286, p-value = 1.661e-07\n\n\np value = 0.0000001661\n\np-value for both the groups (veg and non-veg) is less than 0.05, as a result we reject the null hypothesis, the data for both groups is not normally distributed."
  },
  {
    "objectID": "posts/A3-1/index.html#check-for-variances",
    "href": "posts/A3-1/index.html#check-for-variances",
    "title": "A-3 tips",
    "section": "- Check for Variances",
    "text": "- Check for Variances\n\nvar.test(Tip ~ Food.preferance, data = tip_modified, \n         conf.int = TRUE, conf.level = 0.95) %&gt;% \n  broom::tidy()\n\nMultiple parameters; naming those columns num.df, den.df\n\n\n# A tibble: 1 × 9\n  estimate num.df den.df statistic p.value conf.low conf.high method alternative\n     &lt;dbl&gt;  &lt;int&gt;  &lt;int&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;      \n1    0.346     29     29     0.346 0.00554    0.165     0.726 F tes… two.sided  \n\n\n\n0.00554363 &lt; 0.05, we reject the null hypothesis"
  },
  {
    "objectID": "posts/A3-1/index.html#data-is-not-gaussian-variances-are-approx-equal",
    "href": "posts/A3-1/index.html#data-is-not-gaussian-variances-are-approx-equal",
    "title": "tips",
    "section": "(*data is not Gaussian, variances are approx equal)",
    "text": "(*data is not Gaussian, variances are approx equal)\n–a non-parametric test would be more suitable\n–let’s check what we get regardless\n\nmosaic::t_test(Tip ~Food.preferance, data = tip_modified) %&gt;% \n  broom::tidy()\n\n# A tibble: 1 × 10\n  estimate estimate1 estimate2 statistic p.value parameter conf.low conf.high\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;\n1    -2.33        10      12.3    -0.503   0.617      46.9    -11.7      6.99\n# ℹ 2 more variables: method &lt;chr&gt;, alternative &lt;chr&gt;\n\n\n\np value: 0.6\n\nwe fail to reject the null hypothesis, no significant statistical difference between the means of non-vegetarian and vegetarian groups when it comes to tipping."
  },
  {
    "objectID": "posts/A3-2/index.html",
    "href": "posts/A3-2/index.html",
    "title": "pocketmoney",
    "section": "",
    "text": "Pocket_money &lt;-read.csv(\"../../data/Pocket_money.csv\")\nprint(head(Pocket_money))\n\n  Sr.no    Name Gender Money_spent  X\n1     1   Aagam   Male         150 NA\n2     2  Aakash   Male         240 NA\n3     3 Aarushi Female         382 NA\n4     4 Abheeta Female          60 NA\n5     5 Adithya   Male          68 NA\n6     6  Aditya   Male         300 NA"
  },
  {
    "objectID": "posts/A3-2/index.html#research-question-is-there-a-significant-difference-in-the-average-daily-pocket-money-spent-by-boys-and-girls",
    "href": "posts/A3-2/index.html#research-question-is-there-a-significant-difference-in-the-average-daily-pocket-money-spent-by-boys-and-girls",
    "title": "pocketmoney",
    "section": "Research Question: Is there a significant difference in the average daily pocket money spent by boys and girls?",
    "text": "Research Question: Is there a significant difference in the average daily pocket money spent by boys and girls?\n\n\nExamining and Summarising\n\n\n\ninspect(Pocket_money)\n\n\ncategorical variables:  \n    name     class levels  n missing\n1   Name character     82 82       0\n2 Gender character      2 82       0\n3      X   logical      0  0      82\n                                   distribution\n1 Aagam (1.2%), Aakash (1.2%) ...              \n2 Female (50%), Male (50%)                     \n3  (%)                                         \n\nquantitative variables:  \n         name   class min     Q1 median     Q3   max     mean         sd  n\n1       Sr.no integer   1  21.25   41.5  61.75    82  41.5000   23.81526 82\n2 Money_spent integer   0 100.00  264.5 596.25 13000 720.9634 1835.72169 82\n  missing\n1       0\n2       0\n\n\n\nPocket_money %&gt;% crosstable(Money_spent~Gender) %&gt;% as_flextable()\n\nlabelvariableGenderFemaleMaleMoney_spentMin / Max0 / 1.3e+040 / 1.0e+04Med [IQR]280.0 [85.0;500.0]250.0 [150.0;842.0]Mean (std)693.3 (2035.8)748.6 (1636.5)N (NA)41 (0)41 (0)\n\n\n\nmosaic::t_test(Money_spent~Gender, data=Pocket_money)  %&gt;% broom::tidy()\n\n# A tibble: 1 × 10\n  estimate estimate1 estimate2 statistic p.value parameter conf.low conf.high\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;\n1    -55.3      693.      749.    -0.136   0.893      76.5    -868.      757.\n# ℹ 2 more variables: method &lt;chr&gt;, alternative &lt;chr&gt;\n\n\n\n\nData Munging\n\n\n\nlibrary(dplyr)\n\n\npm_modified &lt;- Pocket_money %&gt;%\n  mutate(Gender = as.factor(Gender))\n\n\nQual variables- Gender\n\n\nQuant variable(s)- Money_spent\n\n\nPlotting Graphs\n\n\n\npm_modified %&gt;%\n  gf_density(\n    ~ Money_spent,\n    fill = ~ Gender,\n    alpha = 0.5,\n    title = \"Money Spent Densities\",\n    subtitle = \"Male vs Female\"\n  )\n\n\n\n\n\n\n\n##\npm_modified %&gt;%\n  gf_boxplot(\n    Money_spent ~ Gender,\n    fill = ~ Gender,\n    alpha = 0.5,\n    title = \"Money Spent Box Plots\",\n    subtitle = \"Male vs Female\"\n  ) %&gt;% gf_refine(scale_y_log10()) \n\nWarning in scale_y_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n##\npm_modified %&gt;% count(Gender)\n\n  Gender  n\n1 Female 41\n2   Male 41\n\npm_modified %&gt;% \n  group_by(Gender) %&gt;% \n  summarise(mean = mean(Money_spent))\n\n# A tibble: 2 × 2\n  Gender  mean\n  &lt;fct&gt;  &lt;dbl&gt;\n1 Female  693.\n2 Male    749.\n\n\n\n\nObservations\n\nOutliers in both groups\nBased on median, females spend more money than males.\nIn the density plot we can see that the distributions overlap to quite an extent, females spend more and there is more variability in male spending.\n\n\n\nChecking Assumptions"
  },
  {
    "objectID": "posts/A3-2/index.html#hypotheses",
    "href": "posts/A3-2/index.html#hypotheses",
    "title": "pocketmoney",
    "section": "Hypotheses:",
    "text": "Hypotheses:\n\nH0​: μ male spending​=μ female spending\nHa​: μ male spending ≠ μ female spending"
  },
  {
    "objectID": "posts/A3-2/index.html#check-for-normality",
    "href": "posts/A3-2/index.html#check-for-normality",
    "title": "pocketmoney",
    "section": "- Check for Normality",
    "text": "- Check for Normality\n\npm_modified %&gt;%\n  gf_density( ~ Money_spent,\n              fill = ~ Gender,\n              alpha = 0.5,\n              title = \"Money_spent by males and females\") %&gt;%\n  gf_facet_grid(~ Gender) %&gt;% \n  gf_fitdistr(dist = \"dnorm\")\n\n\n\n\n\n\n\n\n\nboth are right skewed and have sharp peaks…\n\n\nshapiro.test(pm_modified$Money_spent[pm_modified$Gender== \"Female\"])\n\n\n    Shapiro-Wilk normality test\n\ndata:  pm_modified$Money_spent[pm_modified$Gender == \"Female\"]\nW = 0.29606, p-value = 8.961e-13\n\n\np value-&gt; 0.0000000000008961\n\nshapiro.test(pm_modified$Money_spent[pm_modified$Gender== \"Male\"])\n\n\n    Shapiro-Wilk normality test\n\ndata:  pm_modified$Money_spent[pm_modified$Gender == \"Male\"]\nW = 0.40726, p-value = 1.136e-11\n\n\np value-&gt; 0.00000000001136\n\nwe can reject the null hypothesis and go forward with our alternative hypothesis based on w values, we can say data is not normally distributed"
  },
  {
    "objectID": "posts/A3-2/index.html#check-for-variances",
    "href": "posts/A3-2/index.html#check-for-variances",
    "title": "pocketmoney",
    "section": "- Check for Variances",
    "text": "- Check for Variances\n\nvar.test(Money_spent ~ Gender, data = pm_modified, \n         conf.int = TRUE, conf.level = 0.95) %&gt;% \n  broom::tidy()\n\nMultiple parameters; naming those columns num.df, den.df\n\n\n# A tibble: 1 × 9\n  estimate num.df den.df statistic p.value conf.low conf.high method alternative\n     &lt;dbl&gt;  &lt;int&gt;  &lt;int&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;      \n1     1.55     40     40      1.55   0.172    0.825      2.90 F tes… two.sided  \n\n\n\np value= 0.17 hence variances can be considered approximately equal. we do not reject the null hypothesis.\n\n\n-\n\n\nDifference in Means:\n\nobs_diff_pm &lt;- diffmean(Money_spent ~ Gender, data = pm_modified) \nobs_diff_pm\n\ndiffmean \n55.29268"
  },
  {
    "objectID": "posts/A3-2/index.html#inferences",
    "href": "posts/A3-2/index.html#inferences",
    "title": "pocketmoney",
    "section": "Inferences",
    "text": "Inferences"
  },
  {
    "objectID": "posts/A3-4/index.html#research-question-art-design-and-vocation-are-all-diff-different",
    "href": "posts/A3-4/index.html#research-question-art-design-and-vocation-are-all-diff-different",
    "title": "streams",
    "section": "## Research Question: Art, Design, and Vocation are all diff-different?",
    "text": "## Research Question: Art, Design, and Vocation are all diff-different?"
  },
  {
    "objectID": "posts/A3-3/index.html",
    "href": "posts/A3-3/index.html",
    "title": "cartoons",
    "section": "",
    "text": "cartoons &lt;-read.csv(\"../../data/cartoonsvs.csv\")\nprint(head(cartoons))\n\n  Participant.ID Gender     Cartoon Rating\n1             P1   Male Chota Bheem    8.5\n2             P2   Male Chota Bheem    6.0\n3             P3   Male Chota Bheem    8.0\n4             P4   Male Chota Bheem    7.0\n5             P5   Male Chota Bheem    8.0\n6             P6   Male Chota Bheem   10.0"
  },
  {
    "objectID": "posts/A3-3/index.html#research-question-which-is-better-among-doraemon-dragon-tales-and-chhota-bheem",
    "href": "posts/A3-3/index.html#research-question-which-is-better-among-doraemon-dragon-tales-and-chhota-bheem",
    "title": "cartoons",
    "section": "## Research Question: Which is better among Doraemon, Dragon Tales, and Chhota Bheem?",
    "text": "## Research Question: Which is better among Doraemon, Dragon Tales, and Chhota Bheem?\n\nData Munging\n\n\n\nlibrary(dplyr)\n\n\ncartoons_modified &lt;- cartoons %&gt;%\n  mutate(Gender = as.factor(Gender)) %&gt;%\n  mutate(Cartoon = as.factor(Cartoon))\n\n\ncolnames(cartoons_modified)\n\n[1] \"Participant.ID\" \"Gender\"         \"Cartoon\"        \"Rating\""
  },
  {
    "objectID": "posts/A3-3/index.html#plotting-graphs-for-eda",
    "href": "posts/A3-3/index.html#plotting-graphs-for-eda",
    "title": "cartoons",
    "section": "Plotting Graphs for Eda",
    "text": "Plotting Graphs for Eda\n\ngf_histogram(~Rating,\n  fill = ~Cartoon, \n  data = cartoons_modified, \n  alpha = 0.5,  \n  bins = 25  \n) %&gt;%\n  gf_vline(xintercept = ~ mean(Rating, na.rm = TRUE),  \n            linetype = \"dashed\", color = \"red\") %&gt;%\n  gf_labs(\n    title = \"Histogram of Cartoon Ratings\",\n    x = \"Rating\", \n    y = \"Count\"\n  ) %&gt;%\n  gf_text(\n    label = \"Overall Mean\", \n    x = mean(cartoons_modified$Rating, na.rm = TRUE),  \n    y = 2, \n    color = \"red\"\n  ) %&gt;%\n  gf_refine(guides(fill = guide_legend(title = \"Cartoon\"))) \n\n\n\n\n\n\n\n\n\ngf_boxplot(\n  data = cartoons_modified,\n  Rating ~ Cartoon,\n  fill = ~Cartoon,\n  alpha = 0.5\n) %&gt;%\n  gf_vline(xintercept = ~ mean(Rating, na.rm = TRUE)) %&gt;%\n  gf_labs(\n    title = \"Boxplots of Cartoon Ratings\",\n    x = \"Cartoon\", \n    y = \"Rating\",\n   \n  ) %&gt;%\n  gf_refine(\n    scale_x_discrete(guide = \"prism_bracket\"),\n    guides(fill = guide_legend(title = \"Cartoon\"))\n  )\n\nWarning: The S3 guide system was deprecated in ggplot2 3.5.0.\nℹ It has been replaced by a ggproto system that can be extended.\n\n\n\n\n\n\n\n\n\n\nObservations\nDoraemon with the highest mean seems to be the most popular, also shows wide variability\nDragon tales - less popular than the other two\nChota Bheem shows a smaller range of ratings\nOutliers for Doraemon and Dragon tales\n."
  },
  {
    "objectID": "posts/A3-3/index.html#check-for-normality",
    "href": "posts/A3-3/index.html#check-for-normality",
    "title": "cartoons",
    "section": "Check for normality",
    "text": "Check for normality\n\nshapiro.test(x = cartoons_modified$Rating)\n\n\n    Shapiro-Wilk normality test\n\ndata:  cartoons_modified$Rating\nW = 0.93517, p-value = 0.0002269\n\n\nchecking normality for each cartoon\n\nnormality_results &lt;- cartoons_modified %&gt;%\n  group_by(Cartoon) %&gt;%\n  summarise(shapiro_p_value = shapiro.test(Rating)$p.value)\n\nprint(normality_results)\n\n# A tibble: 3 × 2\n  Cartoon      shapiro_p_value\n  &lt;fct&gt;                  &lt;dbl&gt;\n1 Chota Bheem           0.185 \n2 Doraemon              0.0139\n3 Dragon Tales          0.0240\n\n\n\nbased on p values, only the data for chota bheem is normally distributed\n\n\nResidual post-model:\n\ncartoon_anova$residuals %&gt;%\n  as_tibble() %&gt;%\n  gf_dhistogram(~value, data = .) %&gt;%\n  gf_fitdistr()\n\n\n\n\n\n\n\n##\ncartoon_anova$residuals %&gt;%\n  as_tibble() %&gt;%\n  gf_qq(~value, data = .) %&gt;%\n  gf_qqstep() %&gt;%\n  gf_qqline()\n\n\n\n\n\n\n\n##\nshapiro.test(cartoon_anova$residuals)\n\n\n    Shapiro-Wilk normality test\n\ndata:  cartoon_anova$residuals\nW = 0.93926, p-value = 0.0003856\n\n\n\nresiduals are also not normally distributed"
  },
  {
    "objectID": "posts/A3-3/index.html#check-for-variance",
    "href": "posts/A3-3/index.html#check-for-variance",
    "title": "cartoons",
    "section": "Check for Variance",
    "text": "Check for Variance\n\ncartoons_modified %&gt;%\n  group_by(Cartoon) %&gt;%\n  summarise(variance = var(Rating))\n\n# A tibble: 3 × 2\n  Cartoon      variance\n  &lt;fct&gt;           &lt;dbl&gt;\n1 Chota Bheem      2.21\n2 Doraemon         5.25\n3 Dragon Tales     3.84\n\n# Perform Levene's Test for homogeneity of variances\nDescTools::LeveneTest(Rating ~ Cartoon, data = cartoons_modified)\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(&gt;F)\ngroup  2  1.2923 0.2798\n      87               \n\n# Perform Fligner-Killeen Test for homogeneity of variances\nfligner.test(Rating ~ Cartoon, data = cartoons_modified)\n\n\n    Fligner-Killeen test of homogeneity of variances\n\ndata:  Rating by Cartoon\nFligner-Killeen:med chi-squared = 1.8135, df = 2, p-value = 0.4038\n\n\n\nboth tests indicate that variances are approx equal."
  },
  {
    "objectID": "posts/A3-4/index.html#research-question-art-design-and-vocation-are-all-different",
    "href": "posts/A3-4/index.html#research-question-art-design-and-vocation-are-all-different",
    "title": "A-3 streams",
    "section": "## Research Question: Art, Design, and Vocation are all different?",
    "text": "## Research Question: Art, Design, and Vocation are all different?"
  },
  {
    "objectID": "posts/A3-1/index.html#inferences",
    "href": "posts/A3-1/index.html#inferences",
    "title": "A-3 tips",
    "section": "Inferences",
    "text": "Inferences"
  },
  {
    "objectID": "posts/A3-1/index.html#data-is-not-gaussian-variances-are-different",
    "href": "posts/A3-1/index.html#data-is-not-gaussian-variances-are-different",
    "title": "A-3 tips",
    "section": "(*data is not Gaussian, variances are different)",
    "text": "(*data is not Gaussian, variances are different)\n–a non-parametric test would be more suitable\n–let’s check what we get regardless\n\nmosaic::t_test(Tip ~Food.preferance, data = tip_modified) %&gt;% \n  broom::tidy()\n\n# A tibble: 1 × 10\n  estimate estimate1 estimate2 statistic p.value parameter conf.low conf.high\n     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;\n1    -2.33        10      12.3    -0.503   0.617      46.9    -11.7      6.99\n# ℹ 2 more variables: method &lt;chr&gt;, alternative &lt;chr&gt;\n\n\n\np value: 0.6\n\nwe fail to reject the null hypothesis, no significant statistical difference between the means of non-vegetarian and vegetarian groups when it comes to tipping."
  }
]